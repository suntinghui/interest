{"remainingRequest":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\javaEE\\interest\\interest-web\\src\\views\\sys\\menu.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\src\\views\\sys\\menu.vue","mtime":1578533584332},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      /*用于查找的菜单id*/\r\n      menuId: null,\r\n      /*选择的数量*/\r\n      count: null,\r\n      /*选中的组数据*/\r\n      groupId: null,\r\n      /*新建modal的显示参数*/\r\n      newModal: false,\r\n      /*修改modal的显示参数*/\r\n      modifyModal: false,\r\n      /*分页total属性绑定值*/\r\n      total: 0,\r\n      /*loading*/\r\n      loading: true,\r\n      /*pageInfo实体*/\r\n      pageInfo: {\r\n        page: 0,\r\n        pageSize: 10\r\n      },\r\n      /*menu实体*/\r\n      menu: {\r\n        id: null,\r\n        name: null,\r\n        url: null,\r\n        parentId: null,\r\n        sort: null,\r\n        remark: null,\r\n        icon: null\r\n      },\r\n      /*用于添加的menu实体*/\r\n      menuNew: {\r\n        id: null,\r\n        name: null,\r\n        url: null,\r\n        parentId: null,\r\n        sort: null,\r\n        remark: null,\r\n        icon: null\r\n      },\r\n      /*用于修改的menu实体*/\r\n      menuModify: {\r\n        id: null,\r\n        name: null,\r\n        url: null,\r\n        parentId: null,\r\n        sort: null,\r\n        remark: null,\r\n        icon: null\r\n      },\r\n      /*新建验证*/\r\n      ruleNew: {\r\n        name: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入菜单名\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        url: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入路径\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        parentId: [\r\n          { required: true, message: \"输入父类ID\", trigger: \"blur\" },\r\n          {\r\n            validator(rule, value, callback) {\r\n              if (!Number.isInteger(+value)) {\r\n                callback(new Error(\"请输入数字\"));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        sort: [\r\n          { required: true, message: \"输入排序\", trigger: \"blur\" },\r\n          {\r\n            validator(rule, value, callback) {\r\n              if (!Number.isInteger(+value)) {\r\n                callback(new Error(\"请输入数字\"));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        icon: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入图标\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      },\r\n      /*修改验证*/\r\n      ruleModify: {\r\n        name: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入菜单名\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        url: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入路径\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        parentId: [\r\n          { required: true, message: \"输入父类ID\", trigger: \"blur\" },\r\n          {\r\n            validator(rule, value, callback) {\r\n              if (!Number.isInteger(+value)) {\r\n                callback(new Error(\"请输入数字\"));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        sort: [\r\n          { required: true, message: \"输入排序\", trigger: \"blur\" },\r\n          {\r\n            validator(rule, value, callback) {\r\n              if (!Number.isInteger(+value)) {\r\n                callback(new Error(\"请输入数字\"));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        icon: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入图标\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      },\r\n      /*菜单列表*/\r\n      menuList: [],\r\n      /*生产类型表显示字段*/\r\n      columns1: [\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          title: \"菜单ID\",\r\n          key: \"id\"\r\n        },\r\n        {\r\n          title: \"菜单名称\",\r\n          key: \"name\"\r\n        },\r\n        {\r\n          title: \"地址\",\r\n          key: \"url\"\r\n        },\r\n        {\r\n          title: \"上级菜单id\",\r\n          key: \"parentId\"\r\n        },\r\n        {\r\n          title: \"排序\",\r\n          key: \"sort\"\r\n        },\r\n        {\r\n          title: \"图标\",\r\n          key: \"icon\"\r\n        }\r\n      ],\r\n      /*生产类型表数据*/\r\n      data1: []\r\n    };\r\n  },\r\n  mounted() {\r\n    /*页面初始化调用方法*/\r\n    this.getTable({\r\n      pageInfo: this.pageInfo,\r\n      menuId: this.menuId\r\n    });\r\n    this.axios({\r\n      method: \"get\",\r\n      url: \"/menus/parentId\",\r\n      params: {\r\n        parentId: 0\r\n      }\r\n    })\r\n      .then(\r\n        function(response) {\r\n          var listTemp = response.data.data;\r\n          for (var i = 0; i < listTemp.length; i++) {\r\n            this.menuList.push({\r\n              value: listTemp[i].id,\r\n              label: listTemp[i].name\r\n            });\r\n          }\r\n        }.bind(this)\r\n      )\r\n      .catch(function(error) {\r\n        alert(error);\r\n      });\r\n  },\r\n  methods: {\r\n    /*pageInfo实体初始化*/\r\n    initPageInfo() {\r\n      this.pageInfo.page = 0;\r\n      this.pageInfo.pageSize = 10;\r\n    },\r\n    /*menu实体初始化*/\r\n    initMenu() {\r\n      this.menu.id = null;\r\n      this.menu.name = null;\r\n      this.menu.url = null;\r\n      this.menu.parentId = null;\r\n      this.menu.sort = null;\r\n      this.menu.remark = null;\r\n      this.menu.icon = null;\r\n    },\r\n    /*menuNew实体初始化*/\r\n    initMenuNew() {\r\n      this.menuNew.id = null;\r\n      this.menuNew.name = null;\r\n      this.menuNew.url = null;\r\n      this.menuNew.parentId = null;\r\n      this.menuNew.sort = null;\r\n      this.menuNew.remark = null;\r\n      this.menuNew.icon = null;\r\n    },\r\n    /*menuModify实体初始化*/\r\n    initMenuModify() {\r\n      this.menuModify.id = null;\r\n      this.menuModify.name = null;\r\n      this.menuModify.url = null;\r\n      this.menuModify.parentId = null;\r\n      this.menuModify.sort = null;\r\n      this.menuModify.remark = null;\r\n      this.menuModify.icon = null;\r\n    },\r\n    /*menuNew设置*/\r\n    menuSet(e) {\r\n      this.menu.id = e.id;\r\n      this.menu.name = e.name;\r\n      this.menu.url = e.url;\r\n      this.menu.parentId = e.parentId;\r\n      this.menu.sort = e.sort;\r\n      this.menu.remark = e.remark;\r\n      this.menu.icon = e.icon;\r\n    },\r\n    /*menuNew设置*/\r\n    menuNewSet(e) {\r\n      this.menuNew.id = e.id;\r\n      this.menuNew.name = e.name;\r\n      this.menuNew.url = e.url;\r\n      this.menuNew.parentId = e.parentId;\r\n      this.menuNew.sort = e.sort;\r\n      this.menuNew.remark = e.remark;\r\n      this.menuNew.icon = e.icon;\r\n    },\r\n    /*menuModify设置*/\r\n    menuModifySet(e) {\r\n      this.menuModify.id = e.id;\r\n      this.menuModify.name = e.name;\r\n      this.menuModify.url = e.url;\r\n      this.menuModify.parentId = e.parentId + \"\";\r\n      this.menuModify.sort = e.sort + \"\";\r\n      this.menuModify.remark = e.remark;\r\n      this.menuModify.icon = e.icon;\r\n    },\r\n    /*得到表数据*/\r\n    getTable(e) {\r\n      this.axios({\r\n        method: \"get\",\r\n        url: \"/menus\",\r\n        params: {\r\n          page: e.pageInfo.page,\r\n          pageSize: e.pageInfo.pageSize,\r\n          menuId: e.menuId\r\n        }\r\n      })\r\n        .then(\r\n          function(response) {\r\n            this.data1 = response.data.data.data;\r\n            this.total = response.data.data.totalCount;\r\n          }.bind(this)\r\n        )\r\n        .catch(function(error) {\r\n          alert(error);\r\n        });\r\n    },\r\n    /*搜索按钮点击事件*/\r\n    search() {\r\n      this.initPageInfo();\r\n      this.getTable({\r\n        pageInfo: this.pageInfo,\r\n        menuId: this.menuId\r\n      });\r\n    },\r\n    /*分页点击事件*/\r\n    pageSearch(e) {\r\n      this.pageInfo.page = e - 1;\r\n      this.getTable({\r\n        pageInfo: this.pageInfo,\r\n        menuId: this.menuId\r\n      });\r\n    },\r\n    /*新建点击触发事件*/\r\n    openNewModal() {\r\n      this.newModal = true;\r\n      this.initMenuNew();\r\n      this.data1.sort();\r\n      this.count = 0;\r\n      this.groupId = null;\r\n    },\r\n    /*新建modal的newOk点击事件*/\r\n    newOk(menuNew) {\r\n      this.$refs[menuNew].validate(valid => {\r\n        if (valid) {\r\n          this.initMenu();\r\n          this.menuSet(this.menuNew);\r\n          this.axios({\r\n            method: \"post\",\r\n            url: \"/menus/menu\",\r\n            data: this.menu\r\n          })\r\n            .then(\r\n              function(response) {\r\n                this.initMenuNew();\r\n                this.getTable({\r\n                  pageInfo: this.pageInfo,\r\n                  menuId: this.menuId\r\n                });\r\n                this.$Message.info(\"新建成功\");\r\n              }.bind(this)\r\n            )\r\n            .catch(function(error) {\r\n              alert(error);\r\n            });\r\n          this.newModal = false;\r\n        } else {\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.$nextTick(() => {\r\n              this.loading = true;\r\n            });\r\n          }, 1000);\r\n        }\r\n      });\r\n    },\r\n    /*点击修改时判断是否只选择一个*/\r\n    openModifyModal() {\r\n      if (this.count > 1 || this.count < 1) {\r\n        this.modifyModal = false;\r\n        this.$Message.warning(\"请至少选择一项(且只能选择一项)\");\r\n      } else {\r\n        this.modifyModal = true;\r\n      }\r\n    },\r\n    /*修改modal的modifyOk点击事件*/\r\n    modifyOk(menuModify) {\r\n      this.$refs[menuModify].validate(valid => {\r\n        if (valid) {\r\n          this.initMenu();\r\n          this.menuSet(this.menuModify);\r\n          this.axios({\r\n            method: \"put\",\r\n            url: \"/menus/\" + this.menu.id,\r\n            data: this.menu\r\n          })\r\n            .then(\r\n              function(response) {\r\n                this.initMenuNew();\r\n                this.getTable({\r\n                  pageInfo: this.pageInfo,\r\n                  menuId: this.menuId\r\n                });\r\n                this.$Message.info(\"修改成功\");\r\n              }.bind(this)\r\n            )\r\n            .catch(function(error) {\r\n              alert(error);\r\n            });\r\n          this.modifyModal = false;\r\n        } else {\r\n          this.$Message.error(\"表单验证失败!\");\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.$nextTick(() => {\r\n              this.loading = true;\r\n            });\r\n          }, 1000);\r\n        }\r\n      });\r\n    },\r\n    /*modal的cancel点击事件*/\r\n    cancel() {\r\n      // this.$Message.info(\"点击了取消\");\r\n    },\r\n    /*table选择后触发事件*/\r\n    change(e) {\r\n      if (e.length == 1) {\r\n        this.menuModifySet(e[\"0\"]);\r\n      }\r\n      this.setGroupId(e);\r\n    },\r\n    /*通过选中的行设置groupId的值*/\r\n    setGroupId(e) {\r\n      this.groupId = [];\r\n      this.count = e.length;\r\n      for (var i = 0; i <= e.length - 1; i++) {\r\n        this.groupId.push(e[i].id);\r\n      }\r\n    },\r\n    /*删除table中选中的数据*/\r\n    del() {\r\n      if (this.groupId != null && this.groupId != \"\") {\r\n        this.axios({\r\n          method: \"delete\",\r\n          url: \"/menus\",\r\n          data: this.groupId\r\n        })\r\n          .then(\r\n            function(response) {\r\n              this.getTable({\r\n                pageInfo: this.pageInfo,\r\n                menuId: this.menuId\r\n              });\r\n              this.groupId = null;\r\n              this.count = 0;\r\n              this.$Message.info(\"删除成功\");\r\n            }.bind(this)\r\n          )\r\n          .catch(function(error) {\r\n            alert(error);\r\n          });\r\n      }\r\n    },\r\n    /*表格中双击事件*/\r\n    dblclick(e) {\r\n      this.menuModifySet(e);\r\n      this.modifyModal = true;\r\n      this.data1.sort();\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["menu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"menu.vue","sourceRoot":"src/views/sys","sourcesContent":["<style scoped>\r\n  .operation-button{\r\n    margin-right: 3px;\r\n  }\r\n</style>\r\n<template>\r\n\t<div style=\"margin: 20px;\">\r\n        <div>\r\n            <Row style=\"margin-bottom: 25px;\">\r\n                <Col span=\"8\">菜单名称：\r\n                    <Select v-model=\"menuId\" filterable clearable style=\"width: 200px\">\r\n                        <Option v-for=\"item in menuList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                    </Select>\r\n                </Col>\r\n                <Col span=\"8\"><Button type=\"primary\" shape=\"circle\" icon=\"ios-search\" @click=\"search()\">搜索</Button></Col>\r\n            </Row>\r\n        </div>            \r\n        <div>\r\n            <ul style=\"list-style-type: none;\">\r\n                <li>\r\n                    <Button class=\"operation-button\" type=\"primary\" icon=\"md-add\" @click=\"openNewModal()\">新建</Button>\r\n                    <Button class=\"operation-button\" type=\"success\" icon=\"md-build\" @click=\"openModifyModal()\">修改</Button>\r\n                    <Button type=\"error\" icon=\"md-trash\" @click=\"del()\">删除</Button>\r\n                </li>\r\n                <li>\r\n                    <div style=\"padding: 10px 0;\">\r\n                    \t<Table border :columns=\"columns1\" :data=\"data1\" :height=\"400\" @on-selection-change=\"s=>{change(s)}\" @on-row-dblclick=\"s=>{dblclick(s)}\"></Table>\r\n                    </div> \r\n                </li>\r\n                <li>\r\n                    <div style=\"text-align: right;\">\r\n                        <Page :total=\"total\" :page-size=\"pageInfo.pageSize\" show-elevator show-total @on-change=\"e=>{pageSearch(e)}\"></Page>\r\n                    </div>  \r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <!--添加modal-->  \r\n        <Modal :mask-closable=\"false\" :visible.sync=\"newModal\" :loading = \"loading\" v-model=\"newModal\" width=\"600\" title=\"新建\" @on-ok=\"newOk('menuNew')\" @on-cancel=\"cancel()\">\r\n            <Form ref=\"menuNew\" :model=\"menuNew\" :rules=\"ruleNew\" :label-width=\"80\" >\r\n                <Row>\r\n                    <Col span=\"12\">\r\n                        <Form-item label=\"菜单名称:\" prop=\"name\">\r\n                            <Input v-model=\"menuNew.name\" style=\"width: 204px\"/>\r\n                        </Form-item>\r\n                    </Col>\r\n                    <Col span=\"12\">\r\n                        <Form-item label=\"路径:\" prop=\"url\">\r\n                            <Input v-model=\"menuNew.url\" style=\"width: 204px\"/>\r\n                        </Form-item>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span=\"12\">\r\n                        <Form-item label=\"父类ID:\" prop=\"parentId\">\r\n                            <Input v-model=\"menuNew.parentId\" style=\"width: 204px\"/>\r\n                        </Form-item>\r\n                    </Col>\r\n                    <Col span=\"12\">\r\n                        <Form-item label=\"排序号:\" prop=\"sort\">\r\n                            <Input v-model=\"menuNew.sort\" style=\"width: 204px\"/>\r\n                        </Form-item>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span=\"12\">\r\n                        <Form-item label=\"图标:\" prop=\"icon\">\r\n                            <Input v-model=\"menuNew.icon\" style=\"width: 204px\"/>\r\n                        </Form-item>\r\n                    </Col>\r\n                </Row>\r\n                <Form-item label=\"描述:\" prop=\"remark\">\r\n                     <Input v-model=\"menuNew.remark\" type=\"textarea\" :autosize=\"{minRows: 2,maxRows: 5}\"></Input>\r\n                </Form-item>\r\n            </Form>\r\n        </Modal>\r\n        <!--修改modal-->  \r\n        <Modal :mask-closable=\"false\" :visible.sync=\"modifyModal\" :loading = \"loading\" v-model=\"modifyModal\" width=\"600\" title=\"修改\" @on-ok=\"modifyOk('menuModify')\" @on-cancel=\"cancel()\">\r\n            <Form ref=\"menuModify\" :model=\"menuModify\" :rules=\"ruleModify\" :label-width=\"80\" >\r\n                <Row>\r\n                    <Col span=\"12\">\r\n                        <Form-item label=\"菜单名称:\" prop=\"name\">\r\n                            <Input v-model=\"menuModify.name\" style=\"width: 204px\"/>\r\n                        </Form-item>\r\n                    </Col>\r\n                    <Col span=\"12\">\r\n                        <Form-item label=\"路径:\" prop=\"url\">\r\n                            <Input v-model=\"menuModify.url\" style=\"width: 204px\"/>\r\n                        </Form-item>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span=\"12\">\r\n                        <Form-item label=\"父类ID:\" prop=\"parentId\">\r\n                            <Input v-model=\"menuModify.parentId\" style=\"width: 204px\"/>\r\n                        </Form-item>\r\n                    </Col>\r\n                    <Col span=\"12\">\r\n                        <Form-item label=\"排序号:\" prop=\"sort\">\r\n                            <Input v-model=\"menuModify.sort\" style=\"width: 204px\"/>\r\n                        </Form-item>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span=\"12\">\r\n                        <Form-item label=\"图标:\" prop=\"icon\">\r\n                            <Input v-model=\"menuModify.icon\" style=\"width: 204px\"/>\r\n                        </Form-item>\r\n                    </Col>\r\n                </Row>\r\n                <Form-item label=\"描述:\" prop=\"remark\">\r\n                     <Input v-model=\"menuModify.remark\" type=\"textarea\" :autosize=\"{minRows: 2,maxRows: 5}\"></Input>\r\n                </Form-item>\r\n            </Form>\r\n        </Modal>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      /*用于查找的菜单id*/\r\n      menuId: null,\r\n      /*选择的数量*/\r\n      count: null,\r\n      /*选中的组数据*/\r\n      groupId: null,\r\n      /*新建modal的显示参数*/\r\n      newModal: false,\r\n      /*修改modal的显示参数*/\r\n      modifyModal: false,\r\n      /*分页total属性绑定值*/\r\n      total: 0,\r\n      /*loading*/\r\n      loading: true,\r\n      /*pageInfo实体*/\r\n      pageInfo: {\r\n        page: 0,\r\n        pageSize: 10\r\n      },\r\n      /*menu实体*/\r\n      menu: {\r\n        id: null,\r\n        name: null,\r\n        url: null,\r\n        parentId: null,\r\n        sort: null,\r\n        remark: null,\r\n        icon: null\r\n      },\r\n      /*用于添加的menu实体*/\r\n      menuNew: {\r\n        id: null,\r\n        name: null,\r\n        url: null,\r\n        parentId: null,\r\n        sort: null,\r\n        remark: null,\r\n        icon: null\r\n      },\r\n      /*用于修改的menu实体*/\r\n      menuModify: {\r\n        id: null,\r\n        name: null,\r\n        url: null,\r\n        parentId: null,\r\n        sort: null,\r\n        remark: null,\r\n        icon: null\r\n      },\r\n      /*新建验证*/\r\n      ruleNew: {\r\n        name: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入菜单名\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        url: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入路径\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        parentId: [\r\n          { required: true, message: \"输入父类ID\", trigger: \"blur\" },\r\n          {\r\n            validator(rule, value, callback) {\r\n              if (!Number.isInteger(+value)) {\r\n                callback(new Error(\"请输入数字\"));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        sort: [\r\n          { required: true, message: \"输入排序\", trigger: \"blur\" },\r\n          {\r\n            validator(rule, value, callback) {\r\n              if (!Number.isInteger(+value)) {\r\n                callback(new Error(\"请输入数字\"));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        icon: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入图标\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      },\r\n      /*修改验证*/\r\n      ruleModify: {\r\n        name: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入菜单名\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        url: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入路径\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        parentId: [\r\n          { required: true, message: \"输入父类ID\", trigger: \"blur\" },\r\n          {\r\n            validator(rule, value, callback) {\r\n              if (!Number.isInteger(+value)) {\r\n                callback(new Error(\"请输入数字\"));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        sort: [\r\n          { required: true, message: \"输入排序\", trigger: \"blur\" },\r\n          {\r\n            validator(rule, value, callback) {\r\n              if (!Number.isInteger(+value)) {\r\n                callback(new Error(\"请输入数字\"));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        icon: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入图标\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      },\r\n      /*菜单列表*/\r\n      menuList: [],\r\n      /*生产类型表显示字段*/\r\n      columns1: [\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          title: \"菜单ID\",\r\n          key: \"id\"\r\n        },\r\n        {\r\n          title: \"菜单名称\",\r\n          key: \"name\"\r\n        },\r\n        {\r\n          title: \"地址\",\r\n          key: \"url\"\r\n        },\r\n        {\r\n          title: \"上级菜单id\",\r\n          key: \"parentId\"\r\n        },\r\n        {\r\n          title: \"排序\",\r\n          key: \"sort\"\r\n        },\r\n        {\r\n          title: \"图标\",\r\n          key: \"icon\"\r\n        }\r\n      ],\r\n      /*生产类型表数据*/\r\n      data1: []\r\n    };\r\n  },\r\n  mounted() {\r\n    /*页面初始化调用方法*/\r\n    this.getTable({\r\n      pageInfo: this.pageInfo,\r\n      menuId: this.menuId\r\n    });\r\n    this.axios({\r\n      method: \"get\",\r\n      url: \"/menus/parentId\",\r\n      params: {\r\n        parentId: 0\r\n      }\r\n    })\r\n      .then(\r\n        function(response) {\r\n          var listTemp = response.data.data;\r\n          for (var i = 0; i < listTemp.length; i++) {\r\n            this.menuList.push({\r\n              value: listTemp[i].id,\r\n              label: listTemp[i].name\r\n            });\r\n          }\r\n        }.bind(this)\r\n      )\r\n      .catch(function(error) {\r\n        alert(error);\r\n      });\r\n  },\r\n  methods: {\r\n    /*pageInfo实体初始化*/\r\n    initPageInfo() {\r\n      this.pageInfo.page = 0;\r\n      this.pageInfo.pageSize = 10;\r\n    },\r\n    /*menu实体初始化*/\r\n    initMenu() {\r\n      this.menu.id = null;\r\n      this.menu.name = null;\r\n      this.menu.url = null;\r\n      this.menu.parentId = null;\r\n      this.menu.sort = null;\r\n      this.menu.remark = null;\r\n      this.menu.icon = null;\r\n    },\r\n    /*menuNew实体初始化*/\r\n    initMenuNew() {\r\n      this.menuNew.id = null;\r\n      this.menuNew.name = null;\r\n      this.menuNew.url = null;\r\n      this.menuNew.parentId = null;\r\n      this.menuNew.sort = null;\r\n      this.menuNew.remark = null;\r\n      this.menuNew.icon = null;\r\n    },\r\n    /*menuModify实体初始化*/\r\n    initMenuModify() {\r\n      this.menuModify.id = null;\r\n      this.menuModify.name = null;\r\n      this.menuModify.url = null;\r\n      this.menuModify.parentId = null;\r\n      this.menuModify.sort = null;\r\n      this.menuModify.remark = null;\r\n      this.menuModify.icon = null;\r\n    },\r\n    /*menuNew设置*/\r\n    menuSet(e) {\r\n      this.menu.id = e.id;\r\n      this.menu.name = e.name;\r\n      this.menu.url = e.url;\r\n      this.menu.parentId = e.parentId;\r\n      this.menu.sort = e.sort;\r\n      this.menu.remark = e.remark;\r\n      this.menu.icon = e.icon;\r\n    },\r\n    /*menuNew设置*/\r\n    menuNewSet(e) {\r\n      this.menuNew.id = e.id;\r\n      this.menuNew.name = e.name;\r\n      this.menuNew.url = e.url;\r\n      this.menuNew.parentId = e.parentId;\r\n      this.menuNew.sort = e.sort;\r\n      this.menuNew.remark = e.remark;\r\n      this.menuNew.icon = e.icon;\r\n    },\r\n    /*menuModify设置*/\r\n    menuModifySet(e) {\r\n      this.menuModify.id = e.id;\r\n      this.menuModify.name = e.name;\r\n      this.menuModify.url = e.url;\r\n      this.menuModify.parentId = e.parentId + \"\";\r\n      this.menuModify.sort = e.sort + \"\";\r\n      this.menuModify.remark = e.remark;\r\n      this.menuModify.icon = e.icon;\r\n    },\r\n    /*得到表数据*/\r\n    getTable(e) {\r\n      this.axios({\r\n        method: \"get\",\r\n        url: \"/menus\",\r\n        params: {\r\n          page: e.pageInfo.page,\r\n          pageSize: e.pageInfo.pageSize,\r\n          menuId: e.menuId\r\n        }\r\n      })\r\n        .then(\r\n          function(response) {\r\n            this.data1 = response.data.data.data;\r\n            this.total = response.data.data.totalCount;\r\n          }.bind(this)\r\n        )\r\n        .catch(function(error) {\r\n          alert(error);\r\n        });\r\n    },\r\n    /*搜索按钮点击事件*/\r\n    search() {\r\n      this.initPageInfo();\r\n      this.getTable({\r\n        pageInfo: this.pageInfo,\r\n        menuId: this.menuId\r\n      });\r\n    },\r\n    /*分页点击事件*/\r\n    pageSearch(e) {\r\n      this.pageInfo.page = e - 1;\r\n      this.getTable({\r\n        pageInfo: this.pageInfo,\r\n        menuId: this.menuId\r\n      });\r\n    },\r\n    /*新建点击触发事件*/\r\n    openNewModal() {\r\n      this.newModal = true;\r\n      this.initMenuNew();\r\n      this.data1.sort();\r\n      this.count = 0;\r\n      this.groupId = null;\r\n    },\r\n    /*新建modal的newOk点击事件*/\r\n    newOk(menuNew) {\r\n      this.$refs[menuNew].validate(valid => {\r\n        if (valid) {\r\n          this.initMenu();\r\n          this.menuSet(this.menuNew);\r\n          this.axios({\r\n            method: \"post\",\r\n            url: \"/menus/menu\",\r\n            data: this.menu\r\n          })\r\n            .then(\r\n              function(response) {\r\n                this.initMenuNew();\r\n                this.getTable({\r\n                  pageInfo: this.pageInfo,\r\n                  menuId: this.menuId\r\n                });\r\n                this.$Message.info(\"新建成功\");\r\n              }.bind(this)\r\n            )\r\n            .catch(function(error) {\r\n              alert(error);\r\n            });\r\n          this.newModal = false;\r\n        } else {\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.$nextTick(() => {\r\n              this.loading = true;\r\n            });\r\n          }, 1000);\r\n        }\r\n      });\r\n    },\r\n    /*点击修改时判断是否只选择一个*/\r\n    openModifyModal() {\r\n      if (this.count > 1 || this.count < 1) {\r\n        this.modifyModal = false;\r\n        this.$Message.warning(\"请至少选择一项(且只能选择一项)\");\r\n      } else {\r\n        this.modifyModal = true;\r\n      }\r\n    },\r\n    /*修改modal的modifyOk点击事件*/\r\n    modifyOk(menuModify) {\r\n      this.$refs[menuModify].validate(valid => {\r\n        if (valid) {\r\n          this.initMenu();\r\n          this.menuSet(this.menuModify);\r\n          this.axios({\r\n            method: \"put\",\r\n            url: \"/menus/\" + this.menu.id,\r\n            data: this.menu\r\n          })\r\n            .then(\r\n              function(response) {\r\n                this.initMenuNew();\r\n                this.getTable({\r\n                  pageInfo: this.pageInfo,\r\n                  menuId: this.menuId\r\n                });\r\n                this.$Message.info(\"修改成功\");\r\n              }.bind(this)\r\n            )\r\n            .catch(function(error) {\r\n              alert(error);\r\n            });\r\n          this.modifyModal = false;\r\n        } else {\r\n          this.$Message.error(\"表单验证失败!\");\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.$nextTick(() => {\r\n              this.loading = true;\r\n            });\r\n          }, 1000);\r\n        }\r\n      });\r\n    },\r\n    /*modal的cancel点击事件*/\r\n    cancel() {\r\n      // this.$Message.info(\"点击了取消\");\r\n    },\r\n    /*table选择后触发事件*/\r\n    change(e) {\r\n      if (e.length == 1) {\r\n        this.menuModifySet(e[\"0\"]);\r\n      }\r\n      this.setGroupId(e);\r\n    },\r\n    /*通过选中的行设置groupId的值*/\r\n    setGroupId(e) {\r\n      this.groupId = [];\r\n      this.count = e.length;\r\n      for (var i = 0; i <= e.length - 1; i++) {\r\n        this.groupId.push(e[i].id);\r\n      }\r\n    },\r\n    /*删除table中选中的数据*/\r\n    del() {\r\n      if (this.groupId != null && this.groupId != \"\") {\r\n        this.axios({\r\n          method: \"delete\",\r\n          url: \"/menus\",\r\n          data: this.groupId\r\n        })\r\n          .then(\r\n            function(response) {\r\n              this.getTable({\r\n                pageInfo: this.pageInfo,\r\n                menuId: this.menuId\r\n              });\r\n              this.groupId = null;\r\n              this.count = 0;\r\n              this.$Message.info(\"删除成功\");\r\n            }.bind(this)\r\n          )\r\n          .catch(function(error) {\r\n            alert(error);\r\n          });\r\n      }\r\n    },\r\n    /*表格中双击事件*/\r\n    dblclick(e) {\r\n      this.menuModifySet(e);\r\n      this.modifyModal = true;\r\n      this.data1.sort();\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}