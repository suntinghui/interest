{"remainingRequest":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\javaEE\\interest\\interest-web\\src\\views\\sys\\user.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\src\\views\\sys\\user.vue","mtime":1568861049947},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      /*用于查找的登录名*/\r\n      name: null,\r\n      /*选择的数量*/\r\n      count: null,\r\n      /*选中的组数据*/\r\n      groupId: null,\r\n      /*新建modal的显示参数*/\r\n      newModal: false,\r\n      /*修改modal的显示参数*/\r\n      modifyModal: false,\r\n      /*角色配置modal的显示参数*/\r\n      roleModal: false,\r\n      /*分页total属性绑定值*/\r\n      total: 0,\r\n      /*loading*/\r\n      loading: true,\r\n      /*pageInfo实体*/\r\n      pageInfo: {\r\n        page: 0,\r\n        pageSize: 10\r\n      },\r\n      /*user实体*/\r\n      user: {\r\n        id: null,\r\n        name: null,\r\n        loginName: null,\r\n        password: null,\r\n        passwordAgain: null,\r\n        email: null\r\n      },\r\n      /*用于添加的user实体*/\r\n      userNew: {\r\n        id: null,\r\n        name: null,\r\n        loginName: null,\r\n        password: null,\r\n        passwordAgain: null,\r\n        email: null\r\n      },\r\n      /*用于修改的user实体*/\r\n      userModify: {\r\n        id: null,\r\n        name: null,\r\n        usertype: null\r\n      },\r\n      /*新建验证*/\r\n      ruleNew: {\r\n        name: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入用户名\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        loginName: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入登录名\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        password: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入密码\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        passwordAgain: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入再次密码\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        email: [\r\n          { required: true, message: \"输入邮箱\", trigger: \"blur\" },\r\n          { type: \"email\", message: \"输入正确的邮箱格式\", trigger: \"blur\" }\r\n        ]\r\n      },\r\n      /*修改验证*/\r\n      ruleModify: {\r\n        name: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入用户名\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        password: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入密码\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        email: [\r\n          { required: true, message: \"输入邮箱\", trigger: \"blur\" },\r\n          { type: \"email\", message: \"输入正确的邮箱格式\", trigger: \"blur\" }\r\n        ]\r\n      },\r\n      /*表显示字段*/\r\n      columns1: [\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          title: \"用户名\",\r\n          key: \"name\"\r\n        },\r\n        {\r\n          title: \"头像\",\r\n          key: \"headimg\",\r\n          width: 80,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            return h(\r\n              \"img\",\r\n              {\r\n                attrs: {\r\n                  src: params.row.headimg\r\n                },\r\n                style: {\r\n                  width: '30px',  \r\n                  height: '30px'\r\n                }\r\n              }\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: \"url\",\r\n          key: \"url\",\r\n          width: 300,\r\n          render: (h, params) => {\r\n            return h(\r\n              \"a\",\r\n              {\r\n                attrs: {\r\n                  href: params.row.url,\r\n                  target: \"_blank\"\r\n                }\r\n              },\r\n              params.row.url\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: \"邮箱\",\r\n          key: \"email\"\r\n        },\r\n        {\r\n          title: \"用户类型\",\r\n          align: \"center\",\r\n          key: \"usertype\",\r\n          render: (h, params) => {\r\n            if (params.row.usertype == 0) {\r\n              return h(\"div\", [h(\"strong\", null, \"普通用户\")]);\r\n            } else if (params.row.usertype == 1) {\r\n              return h(\"div\", [h(\"strong\", null, \"管理员\")]);\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"注册时间\",\r\n          key: \"createTime\"\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          align: \"center\",\r\n          key: \"action\",\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"info\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.relationSet(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"配置角色\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      /*表数据*/\r\n      data1: [],\r\n      /*表显示字段*/\r\n      columns2: [\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          title: \"角色名称\",\r\n          width: 120,\r\n          key: \"name\"\r\n        },\r\n        {\r\n          title: \"描述\",\r\n          key: \"describe\"\r\n        }\r\n      ],\r\n      /*表数据*/\r\n      data2: [],\r\n      /*data2的临时存储*/\r\n      data2Temp: [],\r\n      /*用户与角色关系列表*/\r\n      relationList: null\r\n    };\r\n  },\r\n  mounted() {\r\n    /*页面初始化调用方法*/\r\n    this.getTable({\r\n      pageInfo: this.pageInfo,\r\n      name: this.name\r\n    });\r\n    this.axios({\r\n      method: \"get\",\r\n      url: \"/roles/all\"\r\n    })\r\n      .then(\r\n        function(response) {\r\n          this.data2Temp = response.data.data;\r\n        }.bind(this)\r\n      )\r\n      .catch(function(error) {\r\n        alert(error);\r\n      });\r\n  },\r\n  methods: {\r\n    /*pageInfo实体初始化*/\r\n    initPageInfo() {\r\n      this.pageInfo.page = 0;\r\n      this.pageInfo.pageSize = 10;\r\n    },\r\n    /*user实体初始化*/\r\n    initUser() {\r\n      this.user.id = null;\r\n      this.user.name = null;\r\n      this.user.loginName = null;\r\n      this.user.password = null;\r\n      this.user.email = null;\r\n    },\r\n    /*userNew实体初始化*/\r\n    initUserNew() {\r\n      this.userNew.id = null;\r\n      this.userNew.name = null;\r\n      this.userNew.loginName = null;\r\n      this.userNew.password = null;\r\n      this.userNew.passwordAgain = null;\r\n      this.userNew.email = null;\r\n    },\r\n    /*userModify实体初始化*/\r\n    initUserModify() {\r\n      this.userModify.id = null;\r\n      this.userModify.name = null;\r\n      this.userModify.loginName = null;\r\n      this.userModify.password = null;\r\n      this.userModify.email = null;\r\n    },\r\n    /*userNew设置*/\r\n    userSet(e) {\r\n      this.user.id = e.id;\r\n      this.user.name = e.name;\r\n      this.user.loginName = e.loginName;\r\n      this.user.password = e.password;\r\n      this.user.email = e.email;\r\n    },\r\n    /*userNew设置*/\r\n    userNewSet(e) {\r\n      this.userNew.id = e.id;\r\n      this.userNew.name = e.name;\r\n      this.userNew.loginName = e.loginName;\r\n      this.userNew.password = e.password;\r\n      this.userNew.passwordAgain = e.password;\r\n      this.userNew.email = e.email;\r\n    },\r\n    /*userModify设置*/\r\n    userModifySet(e) {\r\n      this.userModify.id = e.id;\r\n      this.userModify.name = e.name;\r\n      this.userModify.usertype = e.usertype;\r\n    },\r\n    dateGet(e) {\r\n      var time = new Date(parseInt(e));\r\n      return (\r\n        time.getFullYear() +\r\n        \"-\" +\r\n        (time.getMonth() + 1) +\r\n        \"-\" +\r\n        time.getDate() +\r\n        \" \" +\r\n        time.getHours() +\r\n        \":\" +\r\n        time.getMinutes()\r\n      );\r\n    },\r\n    listDateSet(e) {\r\n      for (var i = e.length - 1; i >= 0; i--) {\r\n        e[i].createTime = this.dateGet(e[i].createTime);\r\n      }\r\n    },\r\n    /*得到表数据*/\r\n    getTable(e) {\r\n      this.axios({\r\n        method: \"get\",\r\n        url: \"/users\",\r\n        params: {\r\n          page: e.pageInfo.page,\r\n          pageSize: e.pageInfo.pageSize,\r\n          name: e.name\r\n        }\r\n      })\r\n        .then(\r\n          function(response) {\r\n            this.data1 = response.data.data.data;\r\n            this.listDateSet(this.data1);\r\n            this.total = response.data.data.totalCount;\r\n          }.bind(this)\r\n        )\r\n        .catch(function(error) {\r\n          console.log(error);\r\n        });\r\n    },\r\n    /*搜索按钮点击事件*/\r\n    search() {\r\n      this.initPageInfo();\r\n      this.getTable({\r\n        pageInfo: this.pageInfo,\r\n        name: this.name\r\n      });\r\n    },\r\n    /*分页点击事件*/\r\n    pageSearch(e) {\r\n      this.pageInfo.page = e - 1;\r\n      this.getTable({\r\n        pageInfo: this.pageInfo,\r\n        name: this.name\r\n      });\r\n    },\r\n    /*新建点击触发事件*/\r\n    openNewModal() {\r\n      this.newModal = true;\r\n      this.initUserNew();\r\n      this.data1.sort();\r\n      this.count = 0;\r\n      this.groupId = null;\r\n    },\r\n    /*新建modal的newOk点击事件*/\r\n    newOk(userNew) {\r\n      this.$refs[userNew].validate(valid => {\r\n        if (valid) {\r\n          if (this.userNew.password == this.userNew.passwordAgain) {\r\n            this.initUser();\r\n            this.userSet(this.userNew);\r\n            this.axios({\r\n              method: \"post\",\r\n              url: \"/users/user\",\r\n              data: this.user\r\n            })\r\n              .then(\r\n                function(response) {\r\n                  this.initUserNew();\r\n                  this.getTable({\r\n                    pageInfo: this.pageInfo,\r\n                    name: this.name\r\n                  });\r\n                  this.$Message.info(\"新建成功\");\r\n                }.bind(this)\r\n              )\r\n              .catch(function(error) {\r\n                alert(error);\r\n              });\r\n            this.newModal = false;\r\n          } else {\r\n            this.$Message.error(\"两次输入的密码不相同！\");\r\n            this.loading = false;\r\n            this.$nextTick(() => {\r\n              this.loading = true;\r\n            });\r\n          }\r\n        } else {\r\n          this.$Message.error(\"表单验证失败!\");\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.$nextTick(() => {\r\n              this.loading = true;\r\n            });\r\n          }, 1000);\r\n        }\r\n      });\r\n    },\r\n    /*点击修改时判断是否只选择一个*/\r\n    openModifyModal() {\r\n      if (this.count > 1 || this.count < 1) {\r\n        this.modifyModal = false;\r\n        this.$Message.warning(\"请至少选择一项(且只能选择一项)\");\r\n      } else {\r\n        this.modifyModal = true;\r\n      }\r\n    },\r\n    /*修改modal的modifyOk点击事件*/\r\n    modifyOk() {\r\n      // this.initUser();\r\n      // this.userSet(this.userModify);\r\n      this.axios({\r\n        method: \"put\",\r\n        url: \"/users/user\",\r\n        data: {\r\n          name: this.userModify.name,\r\n          usertype: this.userModify.usertype,\r\n          id: this.userModify.id\r\n        }\r\n      })\r\n        .then(\r\n          function(response) {\r\n            this.initUserNew();\r\n            this.getTable({\r\n              pageInfo: this.pageInfo,\r\n              name: this.name\r\n            });\r\n            this.$Message.info(\"修改成功\");\r\n          }.bind(this)\r\n        )\r\n        .catch(function(error) {\r\n          alert(error);\r\n        });\r\n      this.modifyModal = false;\r\n    },\r\n    /*modal的cancel点击事件*/\r\n    cancel() {\r\n      this.$Message.info(\"点击了取消\");\r\n    },\r\n    /*table选择后触发事件*/\r\n    change(e) {\r\n      if (e.length == 1) {\r\n        this.userModifySet(e[\"0\"]);\r\n      }\r\n      this.setGroupId(e);\r\n    },\r\n    /*通过选中的行设置groupId的值*/\r\n    setGroupId(e) {\r\n      this.groupId = [];\r\n      this.count = e.length;\r\n      for (var i = 0; i <= e.length - 1; i++) {\r\n        this.groupId.push(e[i].id);\r\n      }\r\n    },\r\n    /*删除table中选中的数据*/\r\n    del() {\r\n      if (this.groupId != null && this.groupId != \"\") {\r\n        this.axios({\r\n          method: \"delete\",\r\n          url: \"/users\",\r\n          data: this.groupId\r\n        })\r\n          .then(\r\n            function(response) {\r\n              this.getTable({\r\n                pageInfo: this.pageInfo,\r\n                name: this.name\r\n              });\r\n              this.groupId = null;\r\n              this.count = 0;\r\n              this.$Message.info(\"删除成功\");\r\n            }.bind(this)\r\n          )\r\n          .catch(function(error) {\r\n            alert(error);\r\n          });\r\n      }\r\n    },\r\n    /*表格中双击事件*/\r\n    dblclick(e) {\r\n      this.userModifySet(e);\r\n      this.modifyModal = true;\r\n      this.data1.sort();\r\n    },\r\n    /*流程配置*/\r\n    relationSet(e) {\r\n      this.roleModal = true;\r\n      this.data2 = [];\r\n      this.axios({\r\n        method: \"get\",\r\n        url: \"/relations/\" + e.id\r\n      })\r\n        .then(\r\n          function(response) {\r\n            var roleList = [];\r\n            for (var i in response.data.data) {\r\n              roleList.push(response.data.data[i].roleId);\r\n            }\r\n            for (var i in this.data2Temp) {\r\n              if (roleList.indexOf(this.data2Temp[i].id) == -1) {\r\n                this.data2.push({\r\n                  id: this.data2Temp[i].id,\r\n                  name: this.data2Temp[i].name,\r\n                  describe: this.data2Temp[i].describe,\r\n                  userId: e.id,\r\n                  _checked: false\r\n                });\r\n              } else {\r\n                this.data2.push({\r\n                  id: this.data2Temp[i].id,\r\n                  name: this.data2Temp[i].name,\r\n                  describe: this.data2Temp[i].describe,\r\n                  userId: e.id,\r\n                  _checked: true\r\n                });\r\n              }\r\n            }\r\n          }.bind(this)\r\n        )\r\n        .catch(function(error) {\r\n          alert(error);\r\n        });\r\n    },\r\n    /*配置角色modal确认按钮点击事件*/\r\n    roleOk() {\r\n      if (this.relationList != null) {\r\n        this.axios({\r\n          method: \"post\",\r\n          url: \"/relations\",\r\n          data: this.relationList\r\n        })\r\n          .then(\r\n            function(response) {\r\n              this.$Message.info(\"配置成功\");\r\n            }.bind(this)\r\n          )\r\n          .catch(function(error) {\r\n            alert(error);\r\n          });\r\n        this.relationList = null;\r\n      }\r\n    },\r\n    /*配置角色modal中表选择改变事件*/\r\n    change2(e) {\r\n      this.relationList = [];\r\n      if (e.length == 0) {\r\n        this.relationList.push({\r\n          userId: this.data2[0].userId\r\n        });\r\n      }\r\n      for (var i in e) {\r\n        this.relationList.push({\r\n          userId: e[i].userId,\r\n          roleId: e[i].id\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["user.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"user.vue","sourceRoot":"src/views/sys","sourcesContent":["<style scoped>\r\n  .operation-button{\r\n    margin-right: 3px;\r\n  }\r\n</style>\r\n<template>\r\n\t<div style=\"margin: 20px;\">\r\n        <div>\r\n            <Row style=\"margin-bottom: 25px;\">\r\n                <Col span=\"8\">用户名：\r\n                \t<Input v-model=\"name\" placeholder=\"请输入...\" style=\"width:200px\" />\r\n                </Col>\r\n                <Col span=\"8\"><Button type=\"primary\" shape=\"circle\" icon=\"ios-search\" @click=\"search()\">搜索</Button></Col>\r\n            </Row>\r\n        </div>            \r\n        <div>\r\n            <ul>\r\n                <li>\r\n                    <Button class=\"operation-button\" type=\"success\" icon=\"md-build\" @click=\"openModifyModal()\">修改</Button>\r\n                    <Button type=\"error\" icon=\"md-trash\" @click=\"del()\">删除</Button>\r\n                </li>\r\n                <li>\r\n                    <div style=\"padding: 10px 0;\">\r\n                    \t<Table border :columns=\"columns1\" :data=\"data1\" :height=\"400\" @on-selection-change=\"s=>{change(s)}\" @on-row-dblclick=\"s=>{dblclick(s)}\"></Table>\r\n                    </div> \r\n                </li>\r\n                <li>\r\n                    <div style=\"text-align: right;\">\r\n                        <Page :total=\"total\" :page-size=\"pageInfo.pageSize\" show-elevator show-total @on-change=\"e=>{pageSearch(e)}\"></Page>\r\n                    </div>  \r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <!--修改modal-->  \r\n        <Modal :mask-closable=\"false\" :visible.sync=\"modifyModal\" v-model=\"modifyModal\" width=\"600\" title=\"修改\" @on-ok=\"modifyOk()\" @on-cancel=\"cancel()\">\r\n             <Form :label-width=\"80\" >\r\n                <Row>\r\n                    <Col span=\"12\">\r\n                        <Form-item label=\"登录名:\">\r\n                            <Input v-model=\"userModify.name\" style=\"width: 204px\" disabled=\"disabled\" />\r\n                        </Form-item>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span=\"12\">\r\n                        <Form-item label=\"用户类型:\">\r\n                            <Select v-model=\"userModify.usertype\" style=\"width:200px\">\r\n                                <Option  :value=\"0\">普通用户</Option>\r\n                                <Option  :value=\"1\">管理员</Option>\r\n                            </Select>\r\n                            <!-- <Input v-model=\"userModify.email\" style=\"width: 204px\"/> -->\r\n                        </Form-item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n        <!--配置角色modal-->  \r\n        <Modal v-model=\"roleModal\" width=\"500\" title=\"角色配置\" @on-ok=\"roleOk()\" @on-cancel=\"cancel()\">\r\n            <div>\r\n                <Table border :columns=\"columns2\" :data=\"data2\" :height=\"260\"  @on-selection-change=\"s=>{change2(s)}\"></Table>\r\n            </div>\r\n        </Modal>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      /*用于查找的登录名*/\r\n      name: null,\r\n      /*选择的数量*/\r\n      count: null,\r\n      /*选中的组数据*/\r\n      groupId: null,\r\n      /*新建modal的显示参数*/\r\n      newModal: false,\r\n      /*修改modal的显示参数*/\r\n      modifyModal: false,\r\n      /*角色配置modal的显示参数*/\r\n      roleModal: false,\r\n      /*分页total属性绑定值*/\r\n      total: 0,\r\n      /*loading*/\r\n      loading: true,\r\n      /*pageInfo实体*/\r\n      pageInfo: {\r\n        page: 0,\r\n        pageSize: 10\r\n      },\r\n      /*user实体*/\r\n      user: {\r\n        id: null,\r\n        name: null,\r\n        loginName: null,\r\n        password: null,\r\n        passwordAgain: null,\r\n        email: null\r\n      },\r\n      /*用于添加的user实体*/\r\n      userNew: {\r\n        id: null,\r\n        name: null,\r\n        loginName: null,\r\n        password: null,\r\n        passwordAgain: null,\r\n        email: null\r\n      },\r\n      /*用于修改的user实体*/\r\n      userModify: {\r\n        id: null,\r\n        name: null,\r\n        usertype: null\r\n      },\r\n      /*新建验证*/\r\n      ruleNew: {\r\n        name: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入用户名\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        loginName: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入登录名\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        password: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入密码\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        passwordAgain: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入再次密码\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        email: [\r\n          { required: true, message: \"输入邮箱\", trigger: \"blur\" },\r\n          { type: \"email\", message: \"输入正确的邮箱格式\", trigger: \"blur\" }\r\n        ]\r\n      },\r\n      /*修改验证*/\r\n      ruleModify: {\r\n        name: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入用户名\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        password: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入密码\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        email: [\r\n          { required: true, message: \"输入邮箱\", trigger: \"blur\" },\r\n          { type: \"email\", message: \"输入正确的邮箱格式\", trigger: \"blur\" }\r\n        ]\r\n      },\r\n      /*表显示字段*/\r\n      columns1: [\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          title: \"用户名\",\r\n          key: \"name\"\r\n        },\r\n        {\r\n          title: \"头像\",\r\n          key: \"headimg\",\r\n          width: 80,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            return h(\r\n              \"img\",\r\n              {\r\n                attrs: {\r\n                  src: params.row.headimg\r\n                },\r\n                style: {\r\n                  width: '30px',  \r\n                  height: '30px'\r\n                }\r\n              }\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: \"url\",\r\n          key: \"url\",\r\n          width: 300,\r\n          render: (h, params) => {\r\n            return h(\r\n              \"a\",\r\n              {\r\n                attrs: {\r\n                  href: params.row.url,\r\n                  target: \"_blank\"\r\n                }\r\n              },\r\n              params.row.url\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: \"邮箱\",\r\n          key: \"email\"\r\n        },\r\n        {\r\n          title: \"用户类型\",\r\n          align: \"center\",\r\n          key: \"usertype\",\r\n          render: (h, params) => {\r\n            if (params.row.usertype == 0) {\r\n              return h(\"div\", [h(\"strong\", null, \"普通用户\")]);\r\n            } else if (params.row.usertype == 1) {\r\n              return h(\"div\", [h(\"strong\", null, \"管理员\")]);\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"注册时间\",\r\n          key: \"createTime\"\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          align: \"center\",\r\n          key: \"action\",\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"info\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.relationSet(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"配置角色\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      /*表数据*/\r\n      data1: [],\r\n      /*表显示字段*/\r\n      columns2: [\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          title: \"角色名称\",\r\n          width: 120,\r\n          key: \"name\"\r\n        },\r\n        {\r\n          title: \"描述\",\r\n          key: \"describe\"\r\n        }\r\n      ],\r\n      /*表数据*/\r\n      data2: [],\r\n      /*data2的临时存储*/\r\n      data2Temp: [],\r\n      /*用户与角色关系列表*/\r\n      relationList: null\r\n    };\r\n  },\r\n  mounted() {\r\n    /*页面初始化调用方法*/\r\n    this.getTable({\r\n      pageInfo: this.pageInfo,\r\n      name: this.name\r\n    });\r\n    this.axios({\r\n      method: \"get\",\r\n      url: \"/roles/all\"\r\n    })\r\n      .then(\r\n        function(response) {\r\n          this.data2Temp = response.data.data;\r\n        }.bind(this)\r\n      )\r\n      .catch(function(error) {\r\n        alert(error);\r\n      });\r\n  },\r\n  methods: {\r\n    /*pageInfo实体初始化*/\r\n    initPageInfo() {\r\n      this.pageInfo.page = 0;\r\n      this.pageInfo.pageSize = 10;\r\n    },\r\n    /*user实体初始化*/\r\n    initUser() {\r\n      this.user.id = null;\r\n      this.user.name = null;\r\n      this.user.loginName = null;\r\n      this.user.password = null;\r\n      this.user.email = null;\r\n    },\r\n    /*userNew实体初始化*/\r\n    initUserNew() {\r\n      this.userNew.id = null;\r\n      this.userNew.name = null;\r\n      this.userNew.loginName = null;\r\n      this.userNew.password = null;\r\n      this.userNew.passwordAgain = null;\r\n      this.userNew.email = null;\r\n    },\r\n    /*userModify实体初始化*/\r\n    initUserModify() {\r\n      this.userModify.id = null;\r\n      this.userModify.name = null;\r\n      this.userModify.loginName = null;\r\n      this.userModify.password = null;\r\n      this.userModify.email = null;\r\n    },\r\n    /*userNew设置*/\r\n    userSet(e) {\r\n      this.user.id = e.id;\r\n      this.user.name = e.name;\r\n      this.user.loginName = e.loginName;\r\n      this.user.password = e.password;\r\n      this.user.email = e.email;\r\n    },\r\n    /*userNew设置*/\r\n    userNewSet(e) {\r\n      this.userNew.id = e.id;\r\n      this.userNew.name = e.name;\r\n      this.userNew.loginName = e.loginName;\r\n      this.userNew.password = e.password;\r\n      this.userNew.passwordAgain = e.password;\r\n      this.userNew.email = e.email;\r\n    },\r\n    /*userModify设置*/\r\n    userModifySet(e) {\r\n      this.userModify.id = e.id;\r\n      this.userModify.name = e.name;\r\n      this.userModify.usertype = e.usertype;\r\n    },\r\n    dateGet(e) {\r\n      var time = new Date(parseInt(e));\r\n      return (\r\n        time.getFullYear() +\r\n        \"-\" +\r\n        (time.getMonth() + 1) +\r\n        \"-\" +\r\n        time.getDate() +\r\n        \" \" +\r\n        time.getHours() +\r\n        \":\" +\r\n        time.getMinutes()\r\n      );\r\n    },\r\n    listDateSet(e) {\r\n      for (var i = e.length - 1; i >= 0; i--) {\r\n        e[i].createTime = this.dateGet(e[i].createTime);\r\n      }\r\n    },\r\n    /*得到表数据*/\r\n    getTable(e) {\r\n      this.axios({\r\n        method: \"get\",\r\n        url: \"/users\",\r\n        params: {\r\n          page: e.pageInfo.page,\r\n          pageSize: e.pageInfo.pageSize,\r\n          name: e.name\r\n        }\r\n      })\r\n        .then(\r\n          function(response) {\r\n            this.data1 = response.data.data.data;\r\n            this.listDateSet(this.data1);\r\n            this.total = response.data.data.totalCount;\r\n          }.bind(this)\r\n        )\r\n        .catch(function(error) {\r\n          console.log(error);\r\n        });\r\n    },\r\n    /*搜索按钮点击事件*/\r\n    search() {\r\n      this.initPageInfo();\r\n      this.getTable({\r\n        pageInfo: this.pageInfo,\r\n        name: this.name\r\n      });\r\n    },\r\n    /*分页点击事件*/\r\n    pageSearch(e) {\r\n      this.pageInfo.page = e - 1;\r\n      this.getTable({\r\n        pageInfo: this.pageInfo,\r\n        name: this.name\r\n      });\r\n    },\r\n    /*新建点击触发事件*/\r\n    openNewModal() {\r\n      this.newModal = true;\r\n      this.initUserNew();\r\n      this.data1.sort();\r\n      this.count = 0;\r\n      this.groupId = null;\r\n    },\r\n    /*新建modal的newOk点击事件*/\r\n    newOk(userNew) {\r\n      this.$refs[userNew].validate(valid => {\r\n        if (valid) {\r\n          if (this.userNew.password == this.userNew.passwordAgain) {\r\n            this.initUser();\r\n            this.userSet(this.userNew);\r\n            this.axios({\r\n              method: \"post\",\r\n              url: \"/users/user\",\r\n              data: this.user\r\n            })\r\n              .then(\r\n                function(response) {\r\n                  this.initUserNew();\r\n                  this.getTable({\r\n                    pageInfo: this.pageInfo,\r\n                    name: this.name\r\n                  });\r\n                  this.$Message.info(\"新建成功\");\r\n                }.bind(this)\r\n              )\r\n              .catch(function(error) {\r\n                alert(error);\r\n              });\r\n            this.newModal = false;\r\n          } else {\r\n            this.$Message.error(\"两次输入的密码不相同！\");\r\n            this.loading = false;\r\n            this.$nextTick(() => {\r\n              this.loading = true;\r\n            });\r\n          }\r\n        } else {\r\n          this.$Message.error(\"表单验证失败!\");\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.$nextTick(() => {\r\n              this.loading = true;\r\n            });\r\n          }, 1000);\r\n        }\r\n      });\r\n    },\r\n    /*点击修改时判断是否只选择一个*/\r\n    openModifyModal() {\r\n      if (this.count > 1 || this.count < 1) {\r\n        this.modifyModal = false;\r\n        this.$Message.warning(\"请至少选择一项(且只能选择一项)\");\r\n      } else {\r\n        this.modifyModal = true;\r\n      }\r\n    },\r\n    /*修改modal的modifyOk点击事件*/\r\n    modifyOk() {\r\n      // this.initUser();\r\n      // this.userSet(this.userModify);\r\n      this.axios({\r\n        method: \"put\",\r\n        url: \"/users/user\",\r\n        data: {\r\n          name: this.userModify.name,\r\n          usertype: this.userModify.usertype,\r\n          id: this.userModify.id\r\n        }\r\n      })\r\n        .then(\r\n          function(response) {\r\n            this.initUserNew();\r\n            this.getTable({\r\n              pageInfo: this.pageInfo,\r\n              name: this.name\r\n            });\r\n            this.$Message.info(\"修改成功\");\r\n          }.bind(this)\r\n        )\r\n        .catch(function(error) {\r\n          alert(error);\r\n        });\r\n      this.modifyModal = false;\r\n    },\r\n    /*modal的cancel点击事件*/\r\n    cancel() {\r\n      this.$Message.info(\"点击了取消\");\r\n    },\r\n    /*table选择后触发事件*/\r\n    change(e) {\r\n      if (e.length == 1) {\r\n        this.userModifySet(e[\"0\"]);\r\n      }\r\n      this.setGroupId(e);\r\n    },\r\n    /*通过选中的行设置groupId的值*/\r\n    setGroupId(e) {\r\n      this.groupId = [];\r\n      this.count = e.length;\r\n      for (var i = 0; i <= e.length - 1; i++) {\r\n        this.groupId.push(e[i].id);\r\n      }\r\n    },\r\n    /*删除table中选中的数据*/\r\n    del() {\r\n      if (this.groupId != null && this.groupId != \"\") {\r\n        this.axios({\r\n          method: \"delete\",\r\n          url: \"/users\",\r\n          data: this.groupId\r\n        })\r\n          .then(\r\n            function(response) {\r\n              this.getTable({\r\n                pageInfo: this.pageInfo,\r\n                name: this.name\r\n              });\r\n              this.groupId = null;\r\n              this.count = 0;\r\n              this.$Message.info(\"删除成功\");\r\n            }.bind(this)\r\n          )\r\n          .catch(function(error) {\r\n            alert(error);\r\n          });\r\n      }\r\n    },\r\n    /*表格中双击事件*/\r\n    dblclick(e) {\r\n      this.userModifySet(e);\r\n      this.modifyModal = true;\r\n      this.data1.sort();\r\n    },\r\n    /*流程配置*/\r\n    relationSet(e) {\r\n      this.roleModal = true;\r\n      this.data2 = [];\r\n      this.axios({\r\n        method: \"get\",\r\n        url: \"/relations/\" + e.id\r\n      })\r\n        .then(\r\n          function(response) {\r\n            var roleList = [];\r\n            for (var i in response.data.data) {\r\n              roleList.push(response.data.data[i].roleId);\r\n            }\r\n            for (var i in this.data2Temp) {\r\n              if (roleList.indexOf(this.data2Temp[i].id) == -1) {\r\n                this.data2.push({\r\n                  id: this.data2Temp[i].id,\r\n                  name: this.data2Temp[i].name,\r\n                  describe: this.data2Temp[i].describe,\r\n                  userId: e.id,\r\n                  _checked: false\r\n                });\r\n              } else {\r\n                this.data2.push({\r\n                  id: this.data2Temp[i].id,\r\n                  name: this.data2Temp[i].name,\r\n                  describe: this.data2Temp[i].describe,\r\n                  userId: e.id,\r\n                  _checked: true\r\n                });\r\n              }\r\n            }\r\n          }.bind(this)\r\n        )\r\n        .catch(function(error) {\r\n          alert(error);\r\n        });\r\n    },\r\n    /*配置角色modal确认按钮点击事件*/\r\n    roleOk() {\r\n      if (this.relationList != null) {\r\n        this.axios({\r\n          method: \"post\",\r\n          url: \"/relations\",\r\n          data: this.relationList\r\n        })\r\n          .then(\r\n            function(response) {\r\n              this.$Message.info(\"配置成功\");\r\n            }.bind(this)\r\n          )\r\n          .catch(function(error) {\r\n            alert(error);\r\n          });\r\n        this.relationList = null;\r\n      }\r\n    },\r\n    /*配置角色modal中表选择改变事件*/\r\n    change2(e) {\r\n      this.relationList = [];\r\n      if (e.length == 0) {\r\n        this.relationList.push({\r\n          userId: this.data2[0].userId\r\n        });\r\n      }\r\n      for (var i in e) {\r\n        this.relationList.push({\r\n          userId: e[i].userId,\r\n          roleId: e[i].id\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}