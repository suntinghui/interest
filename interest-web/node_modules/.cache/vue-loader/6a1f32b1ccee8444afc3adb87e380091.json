{"remainingRequest":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\javaEE\\interest\\interest-web\\src\\views\\sys\\interest\\interest-edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\src\\views\\sys\\interest\\interest-edit.vue","mtime":1568861049932},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport InterestQuillEditor from \"./interest-quill-editor\";\r\nexport default {\r\n  components: {\r\n    \"interest-quill-editor\": InterestQuillEditor\r\n  },\r\n  data() {\r\n    return {\r\n      interestContent: \"\",\r\n      interestId: null,\r\n      interestList: [],\r\n      content: null,\r\n      headers: {\r\n        Authorization: \"bearer \" + localStorage.getItem(\"currentUser_token\")\r\n      },\r\n      /*entity实体*/\r\n      entity: {\r\n        id: null,\r\n        title: null,\r\n        info: null,\r\n        image: null,\r\n        content: null,\r\n        sort: null\r\n      },\r\n      /*新建验证*/\r\n      ruleNew: {\r\n        title: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"填写标题\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        info: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"填写介绍\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        image: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"上传图片\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        content: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"填写内容\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        sort: [\r\n          { required: true, message: \"输入排序\", trigger: \"blur\" },\r\n          {\r\n            validator(rule, value, callback) {\r\n              if (!Number.isInteger(+value)) {\r\n                callback(new Error(\"请输入数字\"));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    // console.log(this.$refs.myQuillEditor);\r\n    /*页面初始化调用方法*/\r\n    //this.getTable();\r\n    this.axios({\r\n      method: \"get\",\r\n      url: \"/public/interests\"\r\n    })\r\n      .then(\r\n        function(response) {\r\n          var listTemp = response.data.data;\r\n          for (var i = 0; i < listTemp.length; i++) {\r\n            this.interestList.push({\r\n              value: listTemp[i].id,\r\n              label: listTemp[i].title\r\n            });\r\n          }\r\n        }.bind(this)\r\n      )\r\n      .catch(function(error) {\r\n        alert(error);\r\n      });\r\n  },\r\n  methods: {\r\n    /*entity实体初始化*/\r\n    initEntity() {\r\n      this.entity.id = null;\r\n      this.entity.title = null;\r\n      this.entity.info = null;\r\n      this.entity.image = null;\r\n      this.entity.content = null;\r\n      this.entity.sort = null;\r\n    },\r\n    /*entityNew设置*/\r\n    entitySet(e) {\r\n      this.entity.id = e.id;\r\n      this.entity.title = e.title;\r\n      this.entity.info = e.info;\r\n      this.entity.image = e.image;\r\n      this.entity.content = e.content;\r\n      this.entity.sort = e.sort + \"\";\r\n    },\r\n    dateGet(e) {\r\n      var time = new Date(parseInt(e));\r\n      return (\r\n        time.getFullYear() +\r\n        \"-\" +\r\n        (time.getMonth() + 1) +\r\n        \"-\" +\r\n        time.getDate() +\r\n        \" \" +\r\n        time.getHours() +\r\n        \":\" +\r\n        time.getMinutes()\r\n      );\r\n    },\r\n    listDateSet(e) {\r\n      for (var i = e.length - 1; i >= 0; i--) {\r\n        e[i].time = this.dateGet(e[i].time);\r\n      }\r\n    },\r\n    handleSuccess(res, file) {\r\n      this.entity.image = res.data.url;\r\n      file.url = res.data.url;\r\n      file.name = res.data.url;\r\n    },\r\n    handleBeforeUpload() {\r\n      this.$refs.upload.fileList.splice(0, this.$refs.upload.fileList.length);\r\n      return true;\r\n    },\r\n    handleFormatError(file) {\r\n      this.$Notice.warning({\r\n        title: \"图片格式不对\",\r\n        desc: \"图片格式只能为jpg,jpeg,png\"\r\n      });\r\n    },\r\n    contentGet(e) {\r\n      this.entity.content = e;\r\n    },\r\n    submit(entity) {\r\n      this.$refs[entity].validate(valid => {\r\n        if (valid) {\r\n          this.axios({\r\n            method: \"put\",\r\n            url: \"/admin/interests/interest\",\r\n            data: this.entity\r\n          })\r\n            .then(\r\n              function(response) {\r\n                this.$Message.info(\"修改成功\");\r\n              }.bind(this)\r\n            )\r\n            .catch(\r\n              function(error) {\r\n                this.$Message.error(\"修改失败\");\r\n              }.bind(this)\r\n            );\r\n        }\r\n      });\r\n    },\r\n    selectChange(e) {\r\n      this.axios({\r\n        method: \"get\",\r\n        url: \"/public/interests/interest\",\r\n        params: {\r\n          id: e\r\n        }\r\n      })\r\n        .then(\r\n          function(response) {\r\n            this.entitySet(response.data.data);\r\n            this.interestContent = this.entity.content;\r\n          }.bind(this)\r\n        )\r\n        .catch(\r\n          function(error) {\r\n            this.$Message.error(\"请选择\");\r\n          }.bind(this)\r\n        );\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["interest-edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"interest-edit.vue","sourceRoot":"src/views/sys/interest","sourcesContent":["<style type=\"text/css\">\r\n.editor {\r\n  width: 90%;\r\n}\r\n.editor .ql-container {\r\n  height: 30rem;\r\n}\r\n</style>\r\n<template>\r\n\t<div style=\"margin: 20px;\">\r\n        <Form ref=\"entity\" :model=\"entity\" :rules=\"ruleNew\" :label-width=\"80\" >\r\n        \t<Form-item label=\"兴趣：\">\r\n                <Select v-model=\"interestId\" filterable style=\"width: 200px\" @on-change=\"e=>{selectChange(e)}\">\r\n                    <Option v-for=\"item in interestList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</Option>\r\n                </Select>\r\n            </Form-item>\r\n            <Form-item label=\"标题：\" prop=\"title\">\r\n                <Input v-model=\"entity.title\" style=\"width: 204px\"/>\r\n            </Form-item>\r\n            <Form-item label=\"排序：\" prop=\"sort\">\r\n                <Input v-model=\"entity.sort\" style=\"width: 204px\"/>\r\n            </Form-item>\r\n            <Form-item label=\"简介：\" prop=\"info\">\r\n                <Input v-model=\"entity.info\" type=\"textarea\" :autosize=\"{minRows: 4,maxRows: 5}\"style=\"width: 50%\" />\r\n            </Form-item>\r\n            <Form-item label=\"图片：\" prop=\"image\">\r\n                <Upload \r\n                    ref=\"upload\"\r\n                    :headers=\"headers\"\r\n                    action=\"/interest/admin/interest/upload/picture\"\r\n                    name=\"picture\"\r\n                    :show-upload-list=\"false\"\r\n                    :before-upload=\"handleBeforeUpload\"\r\n                    :on-success=\"handleSuccess\"\r\n                    :on-format-error=\"handleFormatError\"\r\n                    :format=\"['jpg','jpeg','png']\">\r\n                    <Button icon=\"ios-cloud-upload-outline\">上传图片</Button>\r\n                </Upload>\r\n            </Form-item>\r\n            <Form-item>\r\n                <img v-if=\"entity.image != null\" :src=\"entity.image\" style=\"width: 300px;height: 200px\">\r\n            </Form-item>\r\n            <Form-item label=\"详情：\" prop=\"content\">\r\n                <!-- <quill-editor class=\"editor\"\r\n                  v-model=\"content\" \r\n                  ref=\"myQuillEditor\" \r\n                  :options=\"editorOption\" \r\n                  @blur=\"onEditorBlur($event)\" @focus=\"onEditorFocus($event)\"\r\n                  @change=\"onEditorChange($event)\">\r\n                </quill-editor> -->\r\n                <interest-quill-editor v-bind:interestContent=\"interestContent\"  class=\"editor\" @editor-change=\"e=>{contentGet(e)}\"></interest-quill-editor>\r\n            </Form-item>\r\n            <FormItem>\r\n                <Button type=\"primary\" @click=\"submit('entity')\">修改</Button>\r\n            </FormItem>\r\n        </Form>\r\n    </div>\r\n</template>\r\n<script>\r\nimport InterestQuillEditor from \"./interest-quill-editor\";\r\nexport default {\r\n  components: {\r\n    \"interest-quill-editor\": InterestQuillEditor\r\n  },\r\n  data() {\r\n    return {\r\n      interestContent: \"\",\r\n      interestId: null,\r\n      interestList: [],\r\n      content: null,\r\n      headers: {\r\n        Authorization: \"bearer \" + localStorage.getItem(\"currentUser_token\")\r\n      },\r\n      /*entity实体*/\r\n      entity: {\r\n        id: null,\r\n        title: null,\r\n        info: null,\r\n        image: null,\r\n        content: null,\r\n        sort: null\r\n      },\r\n      /*新建验证*/\r\n      ruleNew: {\r\n        title: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"填写标题\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        info: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"填写介绍\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        image: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"上传图片\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        content: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"填写内容\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        sort: [\r\n          { required: true, message: \"输入排序\", trigger: \"blur\" },\r\n          {\r\n            validator(rule, value, callback) {\r\n              if (!Number.isInteger(+value)) {\r\n                callback(new Error(\"请输入数字\"));\r\n              } else {\r\n                callback();\r\n              }\r\n            },\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    // console.log(this.$refs.myQuillEditor);\r\n    /*页面初始化调用方法*/\r\n    //this.getTable();\r\n    this.axios({\r\n      method: \"get\",\r\n      url: \"/public/interests\"\r\n    })\r\n      .then(\r\n        function(response) {\r\n          var listTemp = response.data.data;\r\n          for (var i = 0; i < listTemp.length; i++) {\r\n            this.interestList.push({\r\n              value: listTemp[i].id,\r\n              label: listTemp[i].title\r\n            });\r\n          }\r\n        }.bind(this)\r\n      )\r\n      .catch(function(error) {\r\n        alert(error);\r\n      });\r\n  },\r\n  methods: {\r\n    /*entity实体初始化*/\r\n    initEntity() {\r\n      this.entity.id = null;\r\n      this.entity.title = null;\r\n      this.entity.info = null;\r\n      this.entity.image = null;\r\n      this.entity.content = null;\r\n      this.entity.sort = null;\r\n    },\r\n    /*entityNew设置*/\r\n    entitySet(e) {\r\n      this.entity.id = e.id;\r\n      this.entity.title = e.title;\r\n      this.entity.info = e.info;\r\n      this.entity.image = e.image;\r\n      this.entity.content = e.content;\r\n      this.entity.sort = e.sort + \"\";\r\n    },\r\n    dateGet(e) {\r\n      var time = new Date(parseInt(e));\r\n      return (\r\n        time.getFullYear() +\r\n        \"-\" +\r\n        (time.getMonth() + 1) +\r\n        \"-\" +\r\n        time.getDate() +\r\n        \" \" +\r\n        time.getHours() +\r\n        \":\" +\r\n        time.getMinutes()\r\n      );\r\n    },\r\n    listDateSet(e) {\r\n      for (var i = e.length - 1; i >= 0; i--) {\r\n        e[i].time = this.dateGet(e[i].time);\r\n      }\r\n    },\r\n    handleSuccess(res, file) {\r\n      this.entity.image = res.data.url;\r\n      file.url = res.data.url;\r\n      file.name = res.data.url;\r\n    },\r\n    handleBeforeUpload() {\r\n      this.$refs.upload.fileList.splice(0, this.$refs.upload.fileList.length);\r\n      return true;\r\n    },\r\n    handleFormatError(file) {\r\n      this.$Notice.warning({\r\n        title: \"图片格式不对\",\r\n        desc: \"图片格式只能为jpg,jpeg,png\"\r\n      });\r\n    },\r\n    contentGet(e) {\r\n      this.entity.content = e;\r\n    },\r\n    submit(entity) {\r\n      this.$refs[entity].validate(valid => {\r\n        if (valid) {\r\n          this.axios({\r\n            method: \"put\",\r\n            url: \"/admin/interests/interest\",\r\n            data: this.entity\r\n          })\r\n            .then(\r\n              function(response) {\r\n                this.$Message.info(\"修改成功\");\r\n              }.bind(this)\r\n            )\r\n            .catch(\r\n              function(error) {\r\n                this.$Message.error(\"修改失败\");\r\n              }.bind(this)\r\n            );\r\n        }\r\n      });\r\n    },\r\n    selectChange(e) {\r\n      this.axios({\r\n        method: \"get\",\r\n        url: \"/public/interests/interest\",\r\n        params: {\r\n          id: e\r\n        }\r\n      })\r\n        .then(\r\n          function(response) {\r\n            this.entitySet(response.data.data);\r\n            this.interestContent = this.entity.content;\r\n          }.bind(this)\r\n        )\r\n        .catch(\r\n          function(error) {\r\n            this.$Message.error(\"请选择\");\r\n          }.bind(this)\r\n        );\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}