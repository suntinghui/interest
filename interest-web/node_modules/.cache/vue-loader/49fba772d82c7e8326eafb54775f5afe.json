{"remainingRequest":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\javaEE\\interest\\interest-web\\src\\views\\rainbow\\djqdatj\\yao.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\src\\views\\rainbow\\djqdatj\\yao.vue","mtime":1578535945609},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\r\nimport echarts from 'echarts'\r\nimport { on, off } from '@/tools'\r\n\r\nvar _this;\r\n\r\nexport default {\r\n  name: 'serviceRequests',\r\n  data () {\r\n    return {\r\n      dom: null,\r\n      scatterData: null,\r\n      cellSize: [80, 80],\r\n      pieRadius: 30\r\n\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    resize () {\r\n      this.dom.resize()\r\n    },\r\n\r\n    getVirtulData() {\r\n        var date = +echarts.number.parseDate('2019-12-01');\r\n        var end = +echarts.number.parseDate('2020-01-01');\r\n        var dayTime = 3600 * 24 * 1000;\r\n        var data = [];\r\n        for (var time = date; time < end; time += dayTime) {\r\n            data.push([\r\n                echarts.format.formatTime('yyyy-MM-dd', time),\r\n                Math.floor(Math.random() * 10000)\r\n            ]);\r\n        }\r\n        return data;\r\n    },\r\n\r\n    getPieSeries(scatterData, chart) {\r\n        return echarts.util.map(scatterData, function (item, index) {\r\n            var center = chart.convertToPixel('calendar', item);\r\n            return {\r\n                id: index + 'pie',\r\n                type: 'pie',\r\n                center: center,\r\n                label: {\r\n                    normal: {\r\n                        formatter: '{c}',\r\n                        position: 'inside'\r\n                    }\r\n                },\r\n                radius: _this.pieRadius,\r\n                data: [\r\n                    {name: '在网', value: Math.round(Math.random() * 24)},\r\n                    {name: '新入网', value: Math.round(Math.random() * 24)},\r\n                    {name: '退网', value: Math.round(Math.random() * 24)}\r\n                ]\r\n            };\r\n        });\r\n    },\r\n\r\n    getPieSeriesUpdate(scatterData, chart) {\r\n        return echarts.util.map(this.scatterData, function (item, index) {\r\n            var center = chart.convertToPixel('calendar', item);\r\n            return {\r\n                id: index + 'pie',\r\n                center: center\r\n            };\r\n        });\r\n    },\r\n\r\n  },\r\n  mounted () {\r\n\r\n    var option = {\r\n      tooltip : {},\r\n          legend: {\r\n              data: ['在网', '新入网', '退网'],\r\n              bottom: 20\r\n          },\r\n          calendar: {\r\n              top: 'middle',\r\n              left: 'center',\r\n              orient: 'vertical',\r\n              cellSize: this.cellSize,\r\n              yearLabel: {\r\n                  show: false,\r\n                  textStyle: {\r\n                      fontSize: 30\r\n                  }\r\n              },\r\n              dayLabel: {\r\n                  margin: 20,\r\n                  firstDay: 1,\r\n                  nameMap: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\r\n              },\r\n              monthLabel: {\r\n                  show: false\r\n              },\r\n              range: ['2019-12']\r\n          },\r\n          series: [{\r\n              id: 'label',\r\n              type: 'scatter',\r\n              coordinateSystem: 'calendar',\r\n              symbolSize: 1,\r\n              label: {\r\n                  normal: {\r\n                      show: true,\r\n                      formatter: function (params) {\r\n                          return echarts.format.formatTime('dd', params.value[0]);\r\n                      },\r\n                      offset: [-this.cellSize[0] / 2 + 10, -this.cellSize[1] / 2 + 10],\r\n                      textStyle: {\r\n                          color: '#000',\r\n                          fontSize: 14\r\n                      }\r\n                  }\r\n              },\r\n              data: this.scatterData\r\n          }]\r\n    }\r\n\r\n    this.$nextTick(() => {\r\n      _this = this;\r\n\r\n      this.scatterData = this.getVirtulData();\r\n\r\n      this.dom = echarts.init(this.$refs.dom)\r\n      this.dom.setOption(option)\r\n\r\n      if (!app.inNode) {\r\n          var pieInitialized;\r\n          setTimeout(function () {\r\n              pieInitialized = true;\r\n              _this.dom.setOption({\r\n                  series: _this.getPieSeries(_this.scatterData, _this.dom)\r\n              });\r\n          }, 10);\r\n\r\n          app.onresize = function () {\r\n              if (pieInitialized) {\r\n                  _this.dom.setOption({\r\n                      series: _this.getPieSeriesUpdate(_this.scatterData, _this.dom)\r\n                  });\r\n              }\r\n          };\r\n      }\r\n\r\n      on(window, 'resize', this.resize)\r\n    })\r\n  },\r\n\r\n  beforeDestroy () {\r\n    off(window, 'resize', this.resize)\r\n  }\r\n}\r\n",{"version":3,"sources":["yao.vue"],"names":[],"mappings":";;;;;AAKA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"yao.vue","sourceRoot":"src/views/rainbow/djqdatj","sourcesContent":["<template>\r\n    <div ref=\"dom\"></div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from 'echarts'\r\nimport { on, off } from '@/tools'\r\n\r\nvar _this;\r\n\r\nexport default {\r\n  name: 'serviceRequests',\r\n  data () {\r\n    return {\r\n      dom: null,\r\n      scatterData: null,\r\n      cellSize: [80, 80],\r\n      pieRadius: 30\r\n\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    resize () {\r\n      this.dom.resize()\r\n    },\r\n\r\n    getVirtulData() {\r\n        var date = +echarts.number.parseDate('2019-12-01');\r\n        var end = +echarts.number.parseDate('2020-01-01');\r\n        var dayTime = 3600 * 24 * 1000;\r\n        var data = [];\r\n        for (var time = date; time < end; time += dayTime) {\r\n            data.push([\r\n                echarts.format.formatTime('yyyy-MM-dd', time),\r\n                Math.floor(Math.random() * 10000)\r\n            ]);\r\n        }\r\n        return data;\r\n    },\r\n\r\n    getPieSeries(scatterData, chart) {\r\n        return echarts.util.map(scatterData, function (item, index) {\r\n            var center = chart.convertToPixel('calendar', item);\r\n            return {\r\n                id: index + 'pie',\r\n                type: 'pie',\r\n                center: center,\r\n                label: {\r\n                    normal: {\r\n                        formatter: '{c}',\r\n                        position: 'inside'\r\n                    }\r\n                },\r\n                radius: _this.pieRadius,\r\n                data: [\r\n                    {name: '在网', value: Math.round(Math.random() * 24)},\r\n                    {name: '新入网', value: Math.round(Math.random() * 24)},\r\n                    {name: '退网', value: Math.round(Math.random() * 24)}\r\n                ]\r\n            };\r\n        });\r\n    },\r\n\r\n    getPieSeriesUpdate(scatterData, chart) {\r\n        return echarts.util.map(this.scatterData, function (item, index) {\r\n            var center = chart.convertToPixel('calendar', item);\r\n            return {\r\n                id: index + 'pie',\r\n                center: center\r\n            };\r\n        });\r\n    },\r\n\r\n  },\r\n  mounted () {\r\n\r\n    var option = {\r\n      tooltip : {},\r\n          legend: {\r\n              data: ['在网', '新入网', '退网'],\r\n              bottom: 20\r\n          },\r\n          calendar: {\r\n              top: 'middle',\r\n              left: 'center',\r\n              orient: 'vertical',\r\n              cellSize: this.cellSize,\r\n              yearLabel: {\r\n                  show: false,\r\n                  textStyle: {\r\n                      fontSize: 30\r\n                  }\r\n              },\r\n              dayLabel: {\r\n                  margin: 20,\r\n                  firstDay: 1,\r\n                  nameMap: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\r\n              },\r\n              monthLabel: {\r\n                  show: false\r\n              },\r\n              range: ['2019-12']\r\n          },\r\n          series: [{\r\n              id: 'label',\r\n              type: 'scatter',\r\n              coordinateSystem: 'calendar',\r\n              symbolSize: 1,\r\n              label: {\r\n                  normal: {\r\n                      show: true,\r\n                      formatter: function (params) {\r\n                          return echarts.format.formatTime('dd', params.value[0]);\r\n                      },\r\n                      offset: [-this.cellSize[0] / 2 + 10, -this.cellSize[1] / 2 + 10],\r\n                      textStyle: {\r\n                          color: '#000',\r\n                          fontSize: 14\r\n                      }\r\n                  }\r\n              },\r\n              data: this.scatterData\r\n          }]\r\n    }\r\n\r\n    this.$nextTick(() => {\r\n      _this = this;\r\n\r\n      this.scatterData = this.getVirtulData();\r\n\r\n      this.dom = echarts.init(this.$refs.dom)\r\n      this.dom.setOption(option)\r\n\r\n      if (!app.inNode) {\r\n          var pieInitialized;\r\n          setTimeout(function () {\r\n              pieInitialized = true;\r\n              _this.dom.setOption({\r\n                  series: _this.getPieSeries(_this.scatterData, _this.dom)\r\n              });\r\n          }, 10);\r\n\r\n          app.onresize = function () {\r\n              if (pieInitialized) {\r\n                  _this.dom.setOption({\r\n                      series: _this.getPieSeriesUpdate(_this.scatterData, _this.dom)\r\n                  });\r\n              }\r\n          };\r\n      }\r\n\r\n      on(window, 'resize', this.resize)\r\n    })\r\n  },\r\n\r\n  beforeDestroy () {\r\n    off(window, 'resize', this.resize)\r\n  }\r\n}\r\n</script>\r\n"]}]}