{"remainingRequest":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\thread-loader\\dist\\cjs.js!E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\babel-loader\\lib\\index.js!E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\javaEE\\interest\\interest-web\\src\\views\\sys\\interest\\interest-quill-editor.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\src\\views\\sys\\interest\\interest-quill-editor.vue","mtime":1568861049932},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VueQuillEditor, { Quill } from 'vue-quill-editor';\nimport ImageResize from 'quill-image-resize-module'; // import { ImageDrop } from 'quill-image-drop-module';\n//import Quill from 'quill';\n// Quill.register('modules/imageDrop', ImageDrop);\n\nQuill.register('modules/imageResize', ImageResize); // 工具栏配置\n\nvar toolbarOptions = [['bold', 'italic', 'underline', 'strike'], // toggled buttons\n['blockquote', 'code-block'], [{\n  'header': 1\n}, {\n  'header': 2\n}], // custom button values\n[{\n  'list': 'ordered'\n}, {\n  'list': 'bullet'\n}], [{\n  'script': 'sub'\n}, {\n  'script': 'super'\n}], // superscript/subscript\n[{\n  'indent': '-1'\n}, {\n  'indent': '+1'\n}], // outdent/indent\n[{\n  'direction': 'rtl'\n}], // text direction\n[{\n  'size': ['small', false, 'large', 'huge']\n}], // custom dropdown\n[{\n  'header': [1, 2, 3, 4, 5, 6, false]\n}], [{\n  'color': []\n}, {\n  'background': []\n}], // dropdown with defaults from theme\n[{\n  'font': []\n}], [{\n  'align': []\n}], ['link', 'image', 'video'], ['clean'] // remove formatting button\n];\nexport default {\n  props: ['interestContent'],\n  watch: {\n    interestContent: function interestContent(newQuestion, oldQuestion) {\n      // console.log(newQuestion);\n      this.setContent(newQuestion); //this.content = newQuestion+'';\n    }\n  },\n  data: function data() {\n    return _defineProperty({\n      content: \"\",\n      editorOption: {},\n      headers: {\n        Authorization: 'bearer ' + localStorage.getItem(\"currentUser_token\")\n      }\n    }, \"editorOption\", {\n      placeholder: '',\n      theme: 'snow',\n      // or 'bubble'\n      modules: {\n        toolbar: {\n          container: toolbarOptions,\n          // 工具栏\n          handlers: {\n            'image': function (value) {\n              if (value) {\n                document.querySelector('#interest-editor Button').click();\n              } else {\n                this.quill.format('image', false);\n              }\n            }.bind(this)\n          }\n        },\n        // imageDrop: true,\n        imageResize: {\n          displayStyles: {\n            backgroundColor: 'black',\n            border: 'none',\n            color: 'white'\n          },\n          displaySize: true\n        }\n      }\n    });\n  },\n  mounted: function mounted() {},\n  methods: {\n    setContent: function setContent(innerHTML) {\n      var _this = this;\n\n      setTimeout(function () {\n        var quill = _this.$refs.myQuillEditor.quill;\n        quill.container.querySelector('.ql-editor').innerHTML = innerHTML;\n      });\n    },\n    getContent: function getContent() {\n      var quill = this.$refs.myQuillEditor.quill;\n      return quill.container.querySelector('.ql-editor').innerHTML;\n    },\n    handleSuccess: function handleSuccess(res, file) {\n      // 获取富文本组件实例\n      var quill = this.$refs.myQuillEditor.quill; // 获取光标所在位置\n\n      var length = quill.getSelection().index; // 插入图片  res.info为服务器返回的图片地址\n\n      quill.insertEmbed(length, 'image', res.data); // 调整光标到最后\n      //quill.setSelection(length + 1)\n    },\n    handleBeforeUpload: function handleBeforeUpload() {\n      this.$refs.upload.fileList.splice(0, this.$refs.upload.fileList.length);\n      return true;\n    },\n    handleFormatError: function handleFormatError(file) {\n      this.$Notice.warning({\n        title: '图片格式不对',\n        desc: '图片格式只能为jpg,jpeg,png'\n      });\n    },\n    handleMaxSize: function handleMaxSize(file) {\n      this.$Notice.warning({\n        title: '图片太大',\n        desc: '上传图片最大为1M,请优化后在上传。可使用https://zhitu.isux.us/网站优化'\n      });\n    },\n    onEditorBlur: function onEditorBlur() {\n      //失去焦点事件\n      this.$emit('editor-change', this.content);\n    },\n    onEditorFocus: function onEditorFocus() {\n      //获得焦点事件\n      this.$emit('editor-change', this.content);\n    },\n    onEditorChange: function onEditorChange() {\n      //内容改变事件\n      this.$emit('editor-change', this.content);\n    }\n  }\n};",{"version":3,"sources":["interest-quill-editor.vue"],"names":[],"mappings":"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","sourcesContent":["<style type=\"text/css\">\r\n</style>\r\n<template>\r\n  <div>\r\n    <Upload \r\n      v-show=\"false\"\r\n            id=\"interest-editor\"\r\n            ref=\"upload\"\r\n            :headers=\"headers\"\r\n            action=\"/interest/upload/picture\"\r\n            name=\"picture\"\r\n            :show-upload-list=\"false\"\r\n            :before-upload=\"handleBeforeUpload\"\r\n            :on-success=\"handleSuccess\"\r\n            :on-format-error=\"handleFormatError\"\r\n            :format=\"['jpg','jpeg','png']\"\r\n            :max-size=\"1024\"\r\n            :on-exceeded-size=\"handleMaxSize\">\r\n            <Button icon=\"ios-cloud-upload-outline\">上传图片</Button>\r\n        </Upload>\r\n        <quill-editor\r\n          v-model=\"content\" \r\n          ref=\"myQuillEditor\" \r\n          :options=\"editorOption\" \r\n          @blur=\"onEditorBlur($event)\" \r\n          @focus=\"onEditorFocus($event)\"\r\n          @change=\"onEditorChange($event)\">\r\n        </quill-editor>\r\n    </div>\r\n</template>\r\n<script>\r\n    import VueQuillEditor, { Quill } from 'vue-quill-editor';\r\n    import  ImageResize  from 'quill-image-resize-module';\r\n    // import { ImageDrop } from 'quill-image-drop-module';\r\n    //import Quill from 'quill';\r\n    // Quill.register('modules/imageDrop', ImageDrop);\r\n    Quill.register('modules/imageResize', ImageResize);\r\n    // 工具栏配置\r\n    const toolbarOptions = [\r\n      ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n      ['blockquote', 'code-block'],\r\n\r\n      [{'header': 1}, {'header': 2}],               // custom button values\r\n      [{'list': 'ordered'}, {'list': 'bullet'}],\r\n      [{'script': 'sub'}, {'script': 'super'}],      // superscript/subscript\r\n      [{'indent': '-1'}, {'indent': '+1'}],          // outdent/indent\r\n      [{'direction': 'rtl'}],                         // text direction\r\n\r\n      [{'size': ['small', false, 'large', 'huge']}],  // custom dropdown\r\n      [{'header': [1, 2, 3, 4, 5, 6, false]}],\r\n\r\n      [{'color': []}, {'background': []}],          // dropdown with defaults from theme\r\n      [{'font': []}],\r\n      [{'align': []}],\r\n      ['link', 'image', 'video'],\r\n      ['clean']                                         // remove formatting button\r\n    ]\r\n  export default {\r\n        props: ['interestContent'],\r\n        watch: {\r\n            interestContent: function(newQuestion, oldQuestion) {\r\n              // console.log(newQuestion);\r\n              this.setContent(newQuestion);\r\n              //this.content = newQuestion+'';\r\n            }\r\n        },\r\n        data () {\r\n            return {\r\n                content:\"\",\r\n                editorOption:{},\r\n                headers:{\r\n                    Authorization:'bearer '+ localStorage.getItem(\"currentUser_token\")\r\n                },\r\n                editorOption: {\r\n                    placeholder: '',\r\n                    theme: 'snow',  // or 'bubble'\r\n                    modules: {\r\n                        toolbar: {\r\n                            container: toolbarOptions,  // 工具栏\r\n                            handlers: {\r\n                                'image': function (value) {\r\n                                    if (value) {\r\n                                        document.querySelector('#interest-editor Button').click()\r\n                                    } else {\r\n                                        this.quill.format('image', false);\r\n                                    }\r\n                                }.bind(this)\r\n                            }\r\n                        },\r\n                        // imageDrop: true,\r\n                        imageResize: {\r\n                            displayStyles: {\r\n                                backgroundColor: 'black',\r\n                                border: 'none',\r\n                                color: 'white'\r\n                            },\r\n                            displaySize: true\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        mounted(){\r\n        },\r\n        methods:{\r\n            setContent(innerHTML) {\r\n              setTimeout(() => {\r\n                let quill = this.$refs.myQuillEditor.quill;\r\n                quill.container.querySelector('.ql-editor').innerHTML = innerHTML;\r\n              })\r\n            },\r\n            getContent(){\r\n              let quill = this.$refs.myQuillEditor.quill;\r\n              return quill.container.querySelector('.ql-editor').innerHTML;\r\n            },\r\n            handleSuccess (res, file) {\r\n                // 获取富文本组件实例\r\n                let quill = this.$refs.myQuillEditor.quill;\r\n                // 获取光标所在位置\r\n                let length = quill.getSelection().index;\r\n                // 插入图片  res.info为服务器返回的图片地址\r\n                quill.insertEmbed(length, 'image', res.data);\r\n                // 调整光标到最后\r\n                //quill.setSelection(length + 1)\r\n            },\r\n            handleBeforeUpload () {\r\n                this.$refs.upload.fileList.splice(0, this.$refs.upload.fileList.length);\r\n                return true;\r\n            },\r\n            handleFormatError (file) {\r\n                this.$Notice.warning({\r\n                    title: '图片格式不对',\r\n                    desc: '图片格式只能为jpg,jpeg,png'\r\n                });\r\n            },\r\n            handleMaxSize (file) {\r\n                this.$Notice.warning({\r\n                    title: '图片太大',\r\n                    desc: '上传图片最大为1M,请优化后在上传。可使用https://zhitu.isux.us/网站优化'\r\n                });\r\n            },\r\n            onEditorBlur(){//失去焦点事件\r\n              this.$emit('editor-change',this.content);\r\n            },\r\n            onEditorFocus(){//获得焦点事件\r\n              this.$emit('editor-change',this.content);\r\n            },\r\n            onEditorChange(){//内容改变事件\r\n              this.$emit('editor-change',this.content);\r\n            },\r\n            \r\n        }\r\n    }\r\n</script>"],"sourceRoot":"src/views/sys/interest"}]}