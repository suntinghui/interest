{"remainingRequest":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\thread-loader\\dist\\cjs.js!E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\babel-loader\\lib\\index.js!E:\\workspace\\javaEE\\interest\\interest-web\\src\\axios.js","dependencies":[{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\src\\axios.js","mtime":1568861049807},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from \"axios\";\nimport store from \"./store/store\";\nimport router from \"./router\"; // axios 配置\n\naxios.defaults.timeout = 10000;\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\nif (localStorage.getItem(\"currentUser_token\") == null || localStorage.getItem(\"currentUser_token\") == \"\") {\n  axios.defaults.headers.common[\"Authorization\"] = \"\";\n} else {\n  axios.defaults.headers.common[\"Authorization\"] = \"bearer \" + localStorage.getItem(\"currentUser_token\");\n}\n\naxios.defaults.baseURL = \"/interest\"; // http request 拦截器\n\n/*axios.interceptors.request.use(\r\n    config => {\r\n        if (store.state.token) {\r\n            config.headers.Authorization = `token ${store.state.token}`;\r\n        }\r\n        return config;\r\n    },\r\n    err => {\r\n        return Promise.reject(err);\r\n    });*/\n// http response 拦截器\n\naxios.interceptors.response.use(function (response) {\n  switch (response.data.status) {\n    case \"4001\":\n      store.commit(\"users/clearUser\"); //location.reload();\n\n      setTimeout(\"location.reload()\", 100);\n      router.replace({\n        path: \"/\"\n      });\n      break;\n\n    case \"4003\":\n      router.replace({\n        path: \"/\"\n      });\n      break;\n  }\n\n  return response;\n}, function (error) {\n  if (error.response) {\n    switch (error.response.status) {\n      case 401:\n        // 401 清除token信息并跳转到登录页面\n        store.commit(\"users/clearUser\"); //location.reload();\n\n        setTimeout(\"location.reload()\", 100);\n        router.replace({\n          path: \"/\"\n        });\n        break;\n\n      case 403:\n        // 403 无权限，跳转到首页\n        router.replace({\n          path: \"/\"\n        });\n        break;\n    }\n  } // console.log(JSON.stringify(error));//console : Error: Request failed with status code 402\n\n  /*return Promise.reject(error.response.data)*/\n\n\n  return Promise.reject(\"\");\n});\nexport default axios;",{"version":3,"sources":["E:\\workspace\\javaEE\\interest\\interest-web\\src\\axios.js"],"names":["axios","store","router","defaults","timeout","headers","post","localStorage","getItem","common","baseURL","interceptors","response","use","data","status","commit","setTimeout","replace","path","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACAF,KAAK,CAACG,QAAN,CAAeC,OAAf,GAAyB,KAAzB;AACAJ,KAAK,CAACG,QAAN,CAAeE,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8C,kBAA9C;;AACA,IACEC,YAAY,CAACC,OAAb,CAAqB,mBAArB,KAA6C,IAA7C,IACAD,YAAY,CAACC,OAAb,CAAqB,mBAArB,KAA6C,EAF/C,EAGE;AACAR,EAAAA,KAAK,CAACG,QAAN,CAAeE,OAAf,CAAuBI,MAAvB,CAA8B,eAA9B,IAAiD,EAAjD;AACD,CALD,MAKO;AACLT,EAAAA,KAAK,CAACG,QAAN,CAAeE,OAAf,CAAuBI,MAAvB,CAA8B,eAA9B,IACE,YAAYF,YAAY,CAACC,OAAb,CAAqB,mBAArB,CADd;AAED;;AACDR,KAAK,CAACG,QAAN,CAAeO,OAAf,GAAyB,WAAzB,C,CAEA;;AACA;;;;;;;;;;AAWA;;AACAV,KAAK,CAACW,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACE,UAAAD,QAAQ,EAAI;AACV,UAAQA,QAAQ,CAACE,IAAT,CAAcC,MAAtB;AACE,SAAK,MAAL;AACEd,MAAAA,KAAK,CAACe,MAAN,CAAa,iBAAb,EADF,CAEE;;AACAC,MAAAA,UAAU,CAAC,mBAAD,EAAqB,GAArB,CAAV;AACAf,MAAAA,MAAM,CAACgB,OAAP,CAAe;AACbC,QAAAA,IAAI,EAAE;AADO,OAAf;AAGA;;AACF,SAAK,MAAL;AACEjB,MAAAA,MAAM,CAACgB,OAAP,CAAe;AACbC,QAAAA,IAAI,EAAE;AADO,OAAf;AAGA;AAbJ;;AAeA,SAAOP,QAAP;AACD,CAlBH,EAmBE,UAAAQ,KAAK,EAAI;AACP,MAAIA,KAAK,CAACR,QAAV,EAAoB;AAClB,YAAQQ,KAAK,CAACR,QAAN,CAAeG,MAAvB;AACE,WAAK,GAAL;AACE;AACAd,QAAAA,KAAK,CAACe,MAAN,CAAa,iBAAb,EAFF,CAGE;;AACAC,QAAAA,UAAU,CAAC,mBAAD,EAAqB,GAArB,CAAV;AACAf,QAAAA,MAAM,CAACgB,OAAP,CAAe;AACbC,UAAAA,IAAI,EAAE;AADO,SAAf;AAGA;;AACF,WAAK,GAAL;AACE;AACAjB,QAAAA,MAAM,CAACgB,OAAP,CAAe;AACbC,UAAAA,IAAI,EAAE;AADO,SAAf;AAGA;AAfJ;AAiBD,GAnBM,CAoBP;;AACA;;;AACA,SAAOE,OAAO,CAACC,MAAR,CAAe,EAAf,CAAP;AACD,CA1CH;AA6CA,eAAetB,KAAf","sourcesContent":["import axios from \"axios\";\r\nimport store from \"./store/store\";\r\nimport router from \"./router\";\r\n\r\n// axios 配置\r\naxios.defaults.timeout = 10000;\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\r\nif (\r\n  localStorage.getItem(\"currentUser_token\") == null ||\r\n  localStorage.getItem(\"currentUser_token\") == \"\"\r\n) {\r\n  axios.defaults.headers.common[\"Authorization\"] = \"\";\r\n} else {\r\n  axios.defaults.headers.common[\"Authorization\"] =\r\n    \"bearer \" + localStorage.getItem(\"currentUser_token\");\r\n}\r\naxios.defaults.baseURL = \"/interest\";\r\n\r\n// http request 拦截器\r\n/*axios.interceptors.request.use(\r\n    config => {\r\n        if (store.state.token) {\r\n            config.headers.Authorization = `token ${store.state.token}`;\r\n        }\r\n        return config;\r\n    },\r\n    err => {\r\n        return Promise.reject(err);\r\n    });*/\r\n\r\n// http response 拦截器\r\naxios.interceptors.response.use(\r\n  response => {\r\n    switch (response.data.status){\r\n      case \"4001\":\r\n        store.commit(\"users/clearUser\");\r\n        //location.reload();\r\n        setTimeout(\"location.reload()\",100);\r\n        router.replace({\r\n          path: \"/\",\r\n        });\r\n        break;\r\n      case \"4003\":\r\n        router.replace({\r\n          path: \"/\",\r\n        });\r\n        break;\r\n    }\r\n    return response;\r\n  },\r\n  error => {\r\n    if (error.response) {\r\n      switch (error.response.status) {\r\n        case 401:\r\n          // 401 清除token信息并跳转到登录页面\r\n          store.commit(\"users/clearUser\");\r\n          //location.reload();\r\n          setTimeout(\"location.reload()\",100);\r\n          router.replace({\r\n            path: \"/\",\r\n          });\r\n          break;\r\n        case 403:\r\n          // 403 无权限，跳转到首页\r\n          router.replace({\r\n            path: \"/\",\r\n          });\r\n          break;\r\n      }\r\n    }\r\n    // console.log(JSON.stringify(error));//console : Error: Request failed with status code 402\r\n    /*return Promise.reject(error.response.data)*/\r\n    return Promise.reject(\"\");\r\n  }\r\n);\r\n\r\nexport default axios;\r\n"]}]}