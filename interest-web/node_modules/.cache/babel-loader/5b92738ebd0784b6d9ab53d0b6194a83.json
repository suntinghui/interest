{"remainingRequest":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\babel-loader\\lib\\index.js!E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\javaEE\\interest\\interest-web\\src\\views\\rainbow\\djqdatj\\yao.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\src\\views\\rainbow\\djqdatj\\yao.vue","mtime":1578535945609},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\nimport echarts from 'echarts';\nimport { on, off } from '@/tools';\n\nvar _this;\n\nexport default {\n  name: 'serviceRequests',\n  data: function data() {\n    return {\n      dom: null,\n      scatterData: null,\n      cellSize: [80, 80],\n      pieRadius: 30\n    };\n  },\n  methods: {\n    resize: function resize() {\n      this.dom.resize();\n    },\n    getVirtulData: function getVirtulData() {\n      var date = +echarts.number.parseDate('2019-12-01');\n      var end = +echarts.number.parseDate('2020-01-01');\n      var dayTime = 3600 * 24 * 1000;\n      var data = [];\n\n      for (var time = date; time < end; time += dayTime) {\n        data.push([echarts.format.formatTime('yyyy-MM-dd', time), Math.floor(Math.random() * 10000)]);\n      }\n\n      return data;\n    },\n    getPieSeries: function getPieSeries(scatterData, chart) {\n      return echarts.util.map(scatterData, function (item, index) {\n        var center = chart.convertToPixel('calendar', item);\n        return {\n          id: index + 'pie',\n          type: 'pie',\n          center: center,\n          label: {\n            normal: {\n              formatter: '{c}',\n              position: 'inside'\n            }\n          },\n          radius: _this.pieRadius,\n          data: [{\n            name: '在网',\n            value: Math.round(Math.random() * 24)\n          }, {\n            name: '新入网',\n            value: Math.round(Math.random() * 24)\n          }, {\n            name: '退网',\n            value: Math.round(Math.random() * 24)\n          }]\n        };\n      });\n    },\n    getPieSeriesUpdate: function getPieSeriesUpdate(scatterData, chart) {\n      return echarts.util.map(this.scatterData, function (item, index) {\n        var center = chart.convertToPixel('calendar', item);\n        return {\n          id: index + 'pie',\n          center: center\n        };\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    var option = {\n      tooltip: {},\n      legend: {\n        data: ['在网', '新入网', '退网'],\n        bottom: 20\n      },\n      calendar: {\n        top: 'middle',\n        left: 'center',\n        orient: 'vertical',\n        cellSize: this.cellSize,\n        yearLabel: {\n          show: false,\n          textStyle: {\n            fontSize: 30\n          }\n        },\n        dayLabel: {\n          margin: 20,\n          firstDay: 1,\n          nameMap: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\n        },\n        monthLabel: {\n          show: false\n        },\n        range: ['2019-12']\n      },\n      series: [{\n        id: 'label',\n        type: 'scatter',\n        coordinateSystem: 'calendar',\n        symbolSize: 1,\n        label: {\n          normal: {\n            show: true,\n            formatter: function formatter(params) {\n              return echarts.format.formatTime('dd', params.value[0]);\n            },\n            offset: [-this.cellSize[0] / 2 + 10, -this.cellSize[1] / 2 + 10],\n            textStyle: {\n              color: '#000',\n              fontSize: 14\n            }\n          }\n        },\n        data: this.scatterData\n      }]\n    };\n    this.$nextTick(function () {\n      _this = _this2;\n      _this2.scatterData = _this2.getVirtulData();\n      _this2.dom = echarts.init(_this2.$refs.dom);\n\n      _this2.dom.setOption(option);\n\n      if (!app.inNode) {\n        var pieInitialized;\n        setTimeout(function () {\n          pieInitialized = true;\n\n          _this.dom.setOption({\n            series: _this.getPieSeries(_this.scatterData, _this.dom)\n          });\n        }, 10);\n\n        app.onresize = function () {\n          if (pieInitialized) {\n            _this.dom.setOption({\n              series: _this.getPieSeriesUpdate(_this.scatterData, _this.dom)\n            });\n          }\n        };\n      }\n\n      on(window, 'resize', _this2.resize);\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    off(window, 'resize', this.resize);\n  }\n};",{"version":3,"sources":["yao.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div ref=\"dom\"></div>\r\n</template>\r\n\r\n<script>\r\nimport echarts from 'echarts'\r\nimport { on, off } from '@/tools'\r\n\r\nvar _this;\r\n\r\nexport default {\r\n  name: 'serviceRequests',\r\n  data () {\r\n    return {\r\n      dom: null,\r\n      scatterData: null,\r\n      cellSize: [80, 80],\r\n      pieRadius: 30\r\n\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    resize () {\r\n      this.dom.resize()\r\n    },\r\n\r\n    getVirtulData() {\r\n        var date = +echarts.number.parseDate('2019-12-01');\r\n        var end = +echarts.number.parseDate('2020-01-01');\r\n        var dayTime = 3600 * 24 * 1000;\r\n        var data = [];\r\n        for (var time = date; time < end; time += dayTime) {\r\n            data.push([\r\n                echarts.format.formatTime('yyyy-MM-dd', time),\r\n                Math.floor(Math.random() * 10000)\r\n            ]);\r\n        }\r\n        return data;\r\n    },\r\n\r\n    getPieSeries(scatterData, chart) {\r\n        return echarts.util.map(scatterData, function (item, index) {\r\n            var center = chart.convertToPixel('calendar', item);\r\n            return {\r\n                id: index + 'pie',\r\n                type: 'pie',\r\n                center: center,\r\n                label: {\r\n                    normal: {\r\n                        formatter: '{c}',\r\n                        position: 'inside'\r\n                    }\r\n                },\r\n                radius: _this.pieRadius,\r\n                data: [\r\n                    {name: '在网', value: Math.round(Math.random() * 24)},\r\n                    {name: '新入网', value: Math.round(Math.random() * 24)},\r\n                    {name: '退网', value: Math.round(Math.random() * 24)}\r\n                ]\r\n            };\r\n        });\r\n    },\r\n\r\n    getPieSeriesUpdate(scatterData, chart) {\r\n        return echarts.util.map(this.scatterData, function (item, index) {\r\n            var center = chart.convertToPixel('calendar', item);\r\n            return {\r\n                id: index + 'pie',\r\n                center: center\r\n            };\r\n        });\r\n    },\r\n\r\n  },\r\n  mounted () {\r\n\r\n    var option = {\r\n      tooltip : {},\r\n          legend: {\r\n              data: ['在网', '新入网', '退网'],\r\n              bottom: 20\r\n          },\r\n          calendar: {\r\n              top: 'middle',\r\n              left: 'center',\r\n              orient: 'vertical',\r\n              cellSize: this.cellSize,\r\n              yearLabel: {\r\n                  show: false,\r\n                  textStyle: {\r\n                      fontSize: 30\r\n                  }\r\n              },\r\n              dayLabel: {\r\n                  margin: 20,\r\n                  firstDay: 1,\r\n                  nameMap: ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\r\n              },\r\n              monthLabel: {\r\n                  show: false\r\n              },\r\n              range: ['2019-12']\r\n          },\r\n          series: [{\r\n              id: 'label',\r\n              type: 'scatter',\r\n              coordinateSystem: 'calendar',\r\n              symbolSize: 1,\r\n              label: {\r\n                  normal: {\r\n                      show: true,\r\n                      formatter: function (params) {\r\n                          return echarts.format.formatTime('dd', params.value[0]);\r\n                      },\r\n                      offset: [-this.cellSize[0] / 2 + 10, -this.cellSize[1] / 2 + 10],\r\n                      textStyle: {\r\n                          color: '#000',\r\n                          fontSize: 14\r\n                      }\r\n                  }\r\n              },\r\n              data: this.scatterData\r\n          }]\r\n    }\r\n\r\n    this.$nextTick(() => {\r\n      _this = this;\r\n\r\n      this.scatterData = this.getVirtulData();\r\n\r\n      this.dom = echarts.init(this.$refs.dom)\r\n      this.dom.setOption(option)\r\n\r\n      if (!app.inNode) {\r\n          var pieInitialized;\r\n          setTimeout(function () {\r\n              pieInitialized = true;\r\n              _this.dom.setOption({\r\n                  series: _this.getPieSeries(_this.scatterData, _this.dom)\r\n              });\r\n          }, 10);\r\n\r\n          app.onresize = function () {\r\n              if (pieInitialized) {\r\n                  _this.dom.setOption({\r\n                      series: _this.getPieSeriesUpdate(_this.scatterData, _this.dom)\r\n                  });\r\n              }\r\n          };\r\n      }\r\n\r\n      on(window, 'resize', this.resize)\r\n    })\r\n  },\r\n\r\n  beforeDestroy () {\r\n    off(window, 'resize', this.resize)\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/rainbow/djqdatj"}]}