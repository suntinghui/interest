{"remainingRequest":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\thread-loader\\dist\\cjs.js!E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\babel-loader\\lib\\index.js!E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\workspace\\javaEE\\interest\\interest-web\\src\\views\\sys\\user.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\src\\views\\sys\\user.vue","mtime":1568861049947},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\workspace\\javaEE\\interest\\interest-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    var _this = this;\n\n    return {\n      /*用于查找的登录名*/\n      name: null,\n\n      /*选择的数量*/\n      count: null,\n\n      /*选中的组数据*/\n      groupId: null,\n\n      /*新建modal的显示参数*/\n      newModal: false,\n\n      /*修改modal的显示参数*/\n      modifyModal: false,\n\n      /*角色配置modal的显示参数*/\n      roleModal: false,\n\n      /*分页total属性绑定值*/\n      total: 0,\n\n      /*loading*/\n      loading: true,\n\n      /*pageInfo实体*/\n      pageInfo: {\n        page: 0,\n        pageSize: 10\n      },\n\n      /*user实体*/\n      user: {\n        id: null,\n        name: null,\n        loginName: null,\n        password: null,\n        passwordAgain: null,\n        email: null\n      },\n\n      /*用于添加的user实体*/\n      userNew: {\n        id: null,\n        name: null,\n        loginName: null,\n        password: null,\n        passwordAgain: null,\n        email: null\n      },\n\n      /*用于修改的user实体*/\n      userModify: {\n        id: null,\n        name: null,\n        usertype: null\n      },\n\n      /*新建验证*/\n      ruleNew: {\n        name: [{\n          type: \"string\",\n          required: true,\n          message: \"输入用户名\",\n          trigger: \"blur\"\n        }],\n        loginName: [{\n          type: \"string\",\n          required: true,\n          message: \"输入登录名\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          type: \"string\",\n          required: true,\n          message: \"输入密码\",\n          trigger: \"blur\"\n        }],\n        passwordAgain: [{\n          type: \"string\",\n          required: true,\n          message: \"输入再次密码\",\n          trigger: \"blur\"\n        }],\n        email: [{\n          required: true,\n          message: \"输入邮箱\",\n          trigger: \"blur\"\n        }, {\n          type: \"email\",\n          message: \"输入正确的邮箱格式\",\n          trigger: \"blur\"\n        }]\n      },\n\n      /*修改验证*/\n      ruleModify: {\n        name: [{\n          type: \"string\",\n          required: true,\n          message: \"输入用户名\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          type: \"string\",\n          required: true,\n          message: \"输入密码\",\n          trigger: \"blur\"\n        }],\n        email: [{\n          required: true,\n          message: \"输入邮箱\",\n          trigger: \"blur\"\n        }, {\n          type: \"email\",\n          message: \"输入正确的邮箱格式\",\n          trigger: \"blur\"\n        }]\n      },\n\n      /*表显示字段*/\n      columns1: [{\n        type: \"selection\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"用户名\",\n        key: \"name\"\n      }, {\n        title: \"头像\",\n        key: \"headimg\",\n        width: 80,\n        align: \"center\",\n        render: function render(h, params) {\n          return h(\"img\", {\n            attrs: {\n              src: params.row.headimg\n            },\n            style: {\n              width: '30px',\n              height: '30px'\n            }\n          });\n        }\n      }, {\n        title: \"url\",\n        key: \"url\",\n        width: 300,\n        render: function render(h, params) {\n          return h(\"a\", {\n            attrs: {\n              href: params.row.url,\n              target: \"_blank\"\n            }\n          }, params.row.url);\n        }\n      }, {\n        title: \"邮箱\",\n        key: \"email\"\n      }, {\n        title: \"用户类型\",\n        align: \"center\",\n        key: \"usertype\",\n        render: function render(h, params) {\n          if (params.row.usertype == 0) {\n            return h(\"div\", [h(\"strong\", null, \"普通用户\")]);\n          } else if (params.row.usertype == 1) {\n            return h(\"div\", [h(\"strong\", null, \"管理员\")]);\n          }\n        }\n      }, {\n        title: \"注册时间\",\n        key: \"createTime\"\n      }, {\n        title: \"操作\",\n        align: \"center\",\n        key: \"action\",\n        render: function render(h, params) {\n          return h(\"div\", [h(\"Button\", {\n            props: {\n              type: \"info\"\n            },\n            on: {\n              click: function click() {\n                _this.relationSet(params.row);\n              }\n            }\n          }, \"配置角色\")]);\n        }\n      }],\n\n      /*表数据*/\n      data1: [],\n\n      /*表显示字段*/\n      columns2: [{\n        type: \"selection\",\n        width: 60,\n        align: \"center\"\n      }, {\n        title: \"角色名称\",\n        width: 120,\n        key: \"name\"\n      }, {\n        title: \"描述\",\n        key: \"describe\"\n      }],\n\n      /*表数据*/\n      data2: [],\n\n      /*data2的临时存储*/\n      data2Temp: [],\n\n      /*用户与角色关系列表*/\n      relationList: null\n    };\n  },\n  mounted: function mounted() {\n    /*页面初始化调用方法*/\n    this.getTable({\n      pageInfo: this.pageInfo,\n      name: this.name\n    });\n    this.axios({\n      method: \"get\",\n      url: \"/roles/all\"\n    }).then(function (response) {\n      this.data2Temp = response.data.data;\n    }.bind(this)).catch(function (error) {\n      alert(error);\n    });\n  },\n  methods: {\n    /*pageInfo实体初始化*/\n    initPageInfo: function initPageInfo() {\n      this.pageInfo.page = 0;\n      this.pageInfo.pageSize = 10;\n    },\n\n    /*user实体初始化*/\n    initUser: function initUser() {\n      this.user.id = null;\n      this.user.name = null;\n      this.user.loginName = null;\n      this.user.password = null;\n      this.user.email = null;\n    },\n\n    /*userNew实体初始化*/\n    initUserNew: function initUserNew() {\n      this.userNew.id = null;\n      this.userNew.name = null;\n      this.userNew.loginName = null;\n      this.userNew.password = null;\n      this.userNew.passwordAgain = null;\n      this.userNew.email = null;\n    },\n\n    /*userModify实体初始化*/\n    initUserModify: function initUserModify() {\n      this.userModify.id = null;\n      this.userModify.name = null;\n      this.userModify.loginName = null;\n      this.userModify.password = null;\n      this.userModify.email = null;\n    },\n\n    /*userNew设置*/\n    userSet: function userSet(e) {\n      this.user.id = e.id;\n      this.user.name = e.name;\n      this.user.loginName = e.loginName;\n      this.user.password = e.password;\n      this.user.email = e.email;\n    },\n\n    /*userNew设置*/\n    userNewSet: function userNewSet(e) {\n      this.userNew.id = e.id;\n      this.userNew.name = e.name;\n      this.userNew.loginName = e.loginName;\n      this.userNew.password = e.password;\n      this.userNew.passwordAgain = e.password;\n      this.userNew.email = e.email;\n    },\n\n    /*userModify设置*/\n    userModifySet: function userModifySet(e) {\n      this.userModify.id = e.id;\n      this.userModify.name = e.name;\n      this.userModify.usertype = e.usertype;\n    },\n    dateGet: function dateGet(e) {\n      var time = new Date(parseInt(e));\n      return time.getFullYear() + \"-\" + (time.getMonth() + 1) + \"-\" + time.getDate() + \" \" + time.getHours() + \":\" + time.getMinutes();\n    },\n    listDateSet: function listDateSet(e) {\n      for (var i = e.length - 1; i >= 0; i--) {\n        e[i].createTime = this.dateGet(e[i].createTime);\n      }\n    },\n\n    /*得到表数据*/\n    getTable: function getTable(e) {\n      this.axios({\n        method: \"get\",\n        url: \"/users\",\n        params: {\n          page: e.pageInfo.page,\n          pageSize: e.pageInfo.pageSize,\n          name: e.name\n        }\n      }).then(function (response) {\n        this.data1 = response.data.data.data;\n        this.listDateSet(this.data1);\n        this.total = response.data.data.totalCount;\n      }.bind(this)).catch(function (error) {\n        console.log(error);\n      });\n    },\n\n    /*搜索按钮点击事件*/\n    search: function search() {\n      this.initPageInfo();\n      this.getTable({\n        pageInfo: this.pageInfo,\n        name: this.name\n      });\n    },\n\n    /*分页点击事件*/\n    pageSearch: function pageSearch(e) {\n      this.pageInfo.page = e - 1;\n      this.getTable({\n        pageInfo: this.pageInfo,\n        name: this.name\n      });\n    },\n\n    /*新建点击触发事件*/\n    openNewModal: function openNewModal() {\n      this.newModal = true;\n      this.initUserNew();\n      this.data1.sort();\n      this.count = 0;\n      this.groupId = null;\n    },\n\n    /*新建modal的newOk点击事件*/\n    newOk: function newOk(userNew) {\n      var _this2 = this;\n\n      this.$refs[userNew].validate(function (valid) {\n        if (valid) {\n          if (_this2.userNew.password == _this2.userNew.passwordAgain) {\n            _this2.initUser();\n\n            _this2.userSet(_this2.userNew);\n\n            _this2.axios({\n              method: \"post\",\n              url: \"/users/user\",\n              data: _this2.user\n            }).then(function (response) {\n              this.initUserNew();\n              this.getTable({\n                pageInfo: this.pageInfo,\n                name: this.name\n              });\n              this.$Message.info(\"新建成功\");\n            }.bind(_this2)).catch(function (error) {\n              alert(error);\n            });\n\n            _this2.newModal = false;\n          } else {\n            _this2.$Message.error(\"两次输入的密码不相同！\");\n\n            _this2.loading = false;\n\n            _this2.$nextTick(function () {\n              _this2.loading = true;\n            });\n          }\n        } else {\n          _this2.$Message.error(\"表单验证失败!\");\n\n          setTimeout(function () {\n            _this2.loading = false;\n\n            _this2.$nextTick(function () {\n              _this2.loading = true;\n            });\n          }, 1000);\n        }\n      });\n    },\n\n    /*点击修改时判断是否只选择一个*/\n    openModifyModal: function openModifyModal() {\n      if (this.count > 1 || this.count < 1) {\n        this.modifyModal = false;\n        this.$Message.warning(\"请至少选择一项(且只能选择一项)\");\n      } else {\n        this.modifyModal = true;\n      }\n    },\n\n    /*修改modal的modifyOk点击事件*/\n    modifyOk: function modifyOk() {\n      // this.initUser();\n      // this.userSet(this.userModify);\n      this.axios({\n        method: \"put\",\n        url: \"/users/user\",\n        data: {\n          name: this.userModify.name,\n          usertype: this.userModify.usertype,\n          id: this.userModify.id\n        }\n      }).then(function (response) {\n        this.initUserNew();\n        this.getTable({\n          pageInfo: this.pageInfo,\n          name: this.name\n        });\n        this.$Message.info(\"修改成功\");\n      }.bind(this)).catch(function (error) {\n        alert(error);\n      });\n      this.modifyModal = false;\n    },\n\n    /*modal的cancel点击事件*/\n    cancel: function cancel() {\n      this.$Message.info(\"点击了取消\");\n    },\n\n    /*table选择后触发事件*/\n    change: function change(e) {\n      if (e.length == 1) {\n        this.userModifySet(e[\"0\"]);\n      }\n\n      this.setGroupId(e);\n    },\n\n    /*通过选中的行设置groupId的值*/\n    setGroupId: function setGroupId(e) {\n      this.groupId = [];\n      this.count = e.length;\n\n      for (var i = 0; i <= e.length - 1; i++) {\n        this.groupId.push(e[i].id);\n      }\n    },\n\n    /*删除table中选中的数据*/\n    del: function del() {\n      if (this.groupId != null && this.groupId != \"\") {\n        this.axios({\n          method: \"delete\",\n          url: \"/users\",\n          data: this.groupId\n        }).then(function (response) {\n          this.getTable({\n            pageInfo: this.pageInfo,\n            name: this.name\n          });\n          this.groupId = null;\n          this.count = 0;\n          this.$Message.info(\"删除成功\");\n        }.bind(this)).catch(function (error) {\n          alert(error);\n        });\n      }\n    },\n\n    /*表格中双击事件*/\n    dblclick: function dblclick(e) {\n      this.userModifySet(e);\n      this.modifyModal = true;\n      this.data1.sort();\n    },\n\n    /*流程配置*/\n    relationSet: function relationSet(e) {\n      this.roleModal = true;\n      this.data2 = [];\n      this.axios({\n        method: \"get\",\n        url: \"/relations/\" + e.id\n      }).then(function (response) {\n        var roleList = [];\n\n        for (var i in response.data.data) {\n          roleList.push(response.data.data[i].roleId);\n        }\n\n        for (var i in this.data2Temp) {\n          if (roleList.indexOf(this.data2Temp[i].id) == -1) {\n            this.data2.push({\n              id: this.data2Temp[i].id,\n              name: this.data2Temp[i].name,\n              describe: this.data2Temp[i].describe,\n              userId: e.id,\n              _checked: false\n            });\n          } else {\n            this.data2.push({\n              id: this.data2Temp[i].id,\n              name: this.data2Temp[i].name,\n              describe: this.data2Temp[i].describe,\n              userId: e.id,\n              _checked: true\n            });\n          }\n        }\n      }.bind(this)).catch(function (error) {\n        alert(error);\n      });\n    },\n\n    /*配置角色modal确认按钮点击事件*/\n    roleOk: function roleOk() {\n      if (this.relationList != null) {\n        this.axios({\n          method: \"post\",\n          url: \"/relations\",\n          data: this.relationList\n        }).then(function (response) {\n          this.$Message.info(\"配置成功\");\n        }.bind(this)).catch(function (error) {\n          alert(error);\n        });\n        this.relationList = null;\n      }\n    },\n\n    /*配置角色modal中表选择改变事件*/\n    change2: function change2(e) {\n      this.relationList = [];\n\n      if (e.length == 0) {\n        this.relationList.push({\n          userId: this.data2[0].userId\n        });\n      }\n\n      for (var i in e) {\n        this.relationList.push({\n          userId: e[i].userId,\n          roleId: e[i].id\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["user.vue"],"names":[],"mappings":"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","sourcesContent":["<style scoped>\r\n  .operation-button{\r\n    margin-right: 3px;\r\n  }\r\n</style>\r\n<template>\r\n\t<div style=\"margin: 20px;\">\r\n        <div>\r\n            <Row style=\"margin-bottom: 25px;\">\r\n                <Col span=\"8\">用户名：\r\n                \t<Input v-model=\"name\" placeholder=\"请输入...\" style=\"width:200px\" />\r\n                </Col>\r\n                <Col span=\"8\"><Button type=\"primary\" shape=\"circle\" icon=\"ios-search\" @click=\"search()\">搜索</Button></Col>\r\n            </Row>\r\n        </div>            \r\n        <div>\r\n            <ul>\r\n                <li>\r\n                    <Button class=\"operation-button\" type=\"success\" icon=\"md-build\" @click=\"openModifyModal()\">修改</Button>\r\n                    <Button type=\"error\" icon=\"md-trash\" @click=\"del()\">删除</Button>\r\n                </li>\r\n                <li>\r\n                    <div style=\"padding: 10px 0;\">\r\n                    \t<Table border :columns=\"columns1\" :data=\"data1\" :height=\"400\" @on-selection-change=\"s=>{change(s)}\" @on-row-dblclick=\"s=>{dblclick(s)}\"></Table>\r\n                    </div> \r\n                </li>\r\n                <li>\r\n                    <div style=\"text-align: right;\">\r\n                        <Page :total=\"total\" :page-size=\"pageInfo.pageSize\" show-elevator show-total @on-change=\"e=>{pageSearch(e)}\"></Page>\r\n                    </div>  \r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <!--修改modal-->  \r\n        <Modal :mask-closable=\"false\" :visible.sync=\"modifyModal\" v-model=\"modifyModal\" width=\"600\" title=\"修改\" @on-ok=\"modifyOk()\" @on-cancel=\"cancel()\">\r\n             <Form :label-width=\"80\" >\r\n                <Row>\r\n                    <Col span=\"12\">\r\n                        <Form-item label=\"登录名:\">\r\n                            <Input v-model=\"userModify.name\" style=\"width: 204px\" disabled=\"disabled\" />\r\n                        </Form-item>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span=\"12\">\r\n                        <Form-item label=\"用户类型:\">\r\n                            <Select v-model=\"userModify.usertype\" style=\"width:200px\">\r\n                                <Option  :value=\"0\">普通用户</Option>\r\n                                <Option  :value=\"1\">管理员</Option>\r\n                            </Select>\r\n                            <!-- <Input v-model=\"userModify.email\" style=\"width: 204px\"/> -->\r\n                        </Form-item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </Modal>\r\n        <!--配置角色modal-->  \r\n        <Modal v-model=\"roleModal\" width=\"500\" title=\"角色配置\" @on-ok=\"roleOk()\" @on-cancel=\"cancel()\">\r\n            <div>\r\n                <Table border :columns=\"columns2\" :data=\"data2\" :height=\"260\"  @on-selection-change=\"s=>{change2(s)}\"></Table>\r\n            </div>\r\n        </Modal>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      /*用于查找的登录名*/\r\n      name: null,\r\n      /*选择的数量*/\r\n      count: null,\r\n      /*选中的组数据*/\r\n      groupId: null,\r\n      /*新建modal的显示参数*/\r\n      newModal: false,\r\n      /*修改modal的显示参数*/\r\n      modifyModal: false,\r\n      /*角色配置modal的显示参数*/\r\n      roleModal: false,\r\n      /*分页total属性绑定值*/\r\n      total: 0,\r\n      /*loading*/\r\n      loading: true,\r\n      /*pageInfo实体*/\r\n      pageInfo: {\r\n        page: 0,\r\n        pageSize: 10\r\n      },\r\n      /*user实体*/\r\n      user: {\r\n        id: null,\r\n        name: null,\r\n        loginName: null,\r\n        password: null,\r\n        passwordAgain: null,\r\n        email: null\r\n      },\r\n      /*用于添加的user实体*/\r\n      userNew: {\r\n        id: null,\r\n        name: null,\r\n        loginName: null,\r\n        password: null,\r\n        passwordAgain: null,\r\n        email: null\r\n      },\r\n      /*用于修改的user实体*/\r\n      userModify: {\r\n        id: null,\r\n        name: null,\r\n        usertype: null\r\n      },\r\n      /*新建验证*/\r\n      ruleNew: {\r\n        name: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入用户名\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        loginName: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入登录名\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        password: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入密码\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        passwordAgain: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入再次密码\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        email: [\r\n          { required: true, message: \"输入邮箱\", trigger: \"blur\" },\r\n          { type: \"email\", message: \"输入正确的邮箱格式\", trigger: \"blur\" }\r\n        ]\r\n      },\r\n      /*修改验证*/\r\n      ruleModify: {\r\n        name: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入用户名\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        password: [\r\n          {\r\n            type: \"string\",\r\n            required: true,\r\n            message: \"输入密码\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        email: [\r\n          { required: true, message: \"输入邮箱\", trigger: \"blur\" },\r\n          { type: \"email\", message: \"输入正确的邮箱格式\", trigger: \"blur\" }\r\n        ]\r\n      },\r\n      /*表显示字段*/\r\n      columns1: [\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          title: \"用户名\",\r\n          key: \"name\"\r\n        },\r\n        {\r\n          title: \"头像\",\r\n          key: \"headimg\",\r\n          width: 80,\r\n          align: \"center\",\r\n          render: (h, params) => {\r\n            return h(\r\n              \"img\",\r\n              {\r\n                attrs: {\r\n                  src: params.row.headimg\r\n                },\r\n                style: {\r\n                  width: '30px',  \r\n                  height: '30px'\r\n                }\r\n              }\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: \"url\",\r\n          key: \"url\",\r\n          width: 300,\r\n          render: (h, params) => {\r\n            return h(\r\n              \"a\",\r\n              {\r\n                attrs: {\r\n                  href: params.row.url,\r\n                  target: \"_blank\"\r\n                }\r\n              },\r\n              params.row.url\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: \"邮箱\",\r\n          key: \"email\"\r\n        },\r\n        {\r\n          title: \"用户类型\",\r\n          align: \"center\",\r\n          key: \"usertype\",\r\n          render: (h, params) => {\r\n            if (params.row.usertype == 0) {\r\n              return h(\"div\", [h(\"strong\", null, \"普通用户\")]);\r\n            } else if (params.row.usertype == 1) {\r\n              return h(\"div\", [h(\"strong\", null, \"管理员\")]);\r\n            }\r\n          }\r\n        },\r\n        {\r\n          title: \"注册时间\",\r\n          key: \"createTime\"\r\n        },\r\n        {\r\n          title: \"操作\",\r\n          align: \"center\",\r\n          key: \"action\",\r\n          render: (h, params) => {\r\n            return h(\"div\", [\r\n              h(\r\n                \"Button\",\r\n                {\r\n                  props: {\r\n                    type: \"info\"\r\n                  },\r\n                  on: {\r\n                    click: () => {\r\n                      this.relationSet(params.row);\r\n                    }\r\n                  }\r\n                },\r\n                \"配置角色\"\r\n              )\r\n            ]);\r\n          }\r\n        }\r\n      ],\r\n      /*表数据*/\r\n      data1: [],\r\n      /*表显示字段*/\r\n      columns2: [\r\n        {\r\n          type: \"selection\",\r\n          width: 60,\r\n          align: \"center\"\r\n        },\r\n        {\r\n          title: \"角色名称\",\r\n          width: 120,\r\n          key: \"name\"\r\n        },\r\n        {\r\n          title: \"描述\",\r\n          key: \"describe\"\r\n        }\r\n      ],\r\n      /*表数据*/\r\n      data2: [],\r\n      /*data2的临时存储*/\r\n      data2Temp: [],\r\n      /*用户与角色关系列表*/\r\n      relationList: null\r\n    };\r\n  },\r\n  mounted() {\r\n    /*页面初始化调用方法*/\r\n    this.getTable({\r\n      pageInfo: this.pageInfo,\r\n      name: this.name\r\n    });\r\n    this.axios({\r\n      method: \"get\",\r\n      url: \"/roles/all\"\r\n    })\r\n      .then(\r\n        function(response) {\r\n          this.data2Temp = response.data.data;\r\n        }.bind(this)\r\n      )\r\n      .catch(function(error) {\r\n        alert(error);\r\n      });\r\n  },\r\n  methods: {\r\n    /*pageInfo实体初始化*/\r\n    initPageInfo() {\r\n      this.pageInfo.page = 0;\r\n      this.pageInfo.pageSize = 10;\r\n    },\r\n    /*user实体初始化*/\r\n    initUser() {\r\n      this.user.id = null;\r\n      this.user.name = null;\r\n      this.user.loginName = null;\r\n      this.user.password = null;\r\n      this.user.email = null;\r\n    },\r\n    /*userNew实体初始化*/\r\n    initUserNew() {\r\n      this.userNew.id = null;\r\n      this.userNew.name = null;\r\n      this.userNew.loginName = null;\r\n      this.userNew.password = null;\r\n      this.userNew.passwordAgain = null;\r\n      this.userNew.email = null;\r\n    },\r\n    /*userModify实体初始化*/\r\n    initUserModify() {\r\n      this.userModify.id = null;\r\n      this.userModify.name = null;\r\n      this.userModify.loginName = null;\r\n      this.userModify.password = null;\r\n      this.userModify.email = null;\r\n    },\r\n    /*userNew设置*/\r\n    userSet(e) {\r\n      this.user.id = e.id;\r\n      this.user.name = e.name;\r\n      this.user.loginName = e.loginName;\r\n      this.user.password = e.password;\r\n      this.user.email = e.email;\r\n    },\r\n    /*userNew设置*/\r\n    userNewSet(e) {\r\n      this.userNew.id = e.id;\r\n      this.userNew.name = e.name;\r\n      this.userNew.loginName = e.loginName;\r\n      this.userNew.password = e.password;\r\n      this.userNew.passwordAgain = e.password;\r\n      this.userNew.email = e.email;\r\n    },\r\n    /*userModify设置*/\r\n    userModifySet(e) {\r\n      this.userModify.id = e.id;\r\n      this.userModify.name = e.name;\r\n      this.userModify.usertype = e.usertype;\r\n    },\r\n    dateGet(e) {\r\n      var time = new Date(parseInt(e));\r\n      return (\r\n        time.getFullYear() +\r\n        \"-\" +\r\n        (time.getMonth() + 1) +\r\n        \"-\" +\r\n        time.getDate() +\r\n        \" \" +\r\n        time.getHours() +\r\n        \":\" +\r\n        time.getMinutes()\r\n      );\r\n    },\r\n    listDateSet(e) {\r\n      for (var i = e.length - 1; i >= 0; i--) {\r\n        e[i].createTime = this.dateGet(e[i].createTime);\r\n      }\r\n    },\r\n    /*得到表数据*/\r\n    getTable(e) {\r\n      this.axios({\r\n        method: \"get\",\r\n        url: \"/users\",\r\n        params: {\r\n          page: e.pageInfo.page,\r\n          pageSize: e.pageInfo.pageSize,\r\n          name: e.name\r\n        }\r\n      })\r\n        .then(\r\n          function(response) {\r\n            this.data1 = response.data.data.data;\r\n            this.listDateSet(this.data1);\r\n            this.total = response.data.data.totalCount;\r\n          }.bind(this)\r\n        )\r\n        .catch(function(error) {\r\n          console.log(error);\r\n        });\r\n    },\r\n    /*搜索按钮点击事件*/\r\n    search() {\r\n      this.initPageInfo();\r\n      this.getTable({\r\n        pageInfo: this.pageInfo,\r\n        name: this.name\r\n      });\r\n    },\r\n    /*分页点击事件*/\r\n    pageSearch(e) {\r\n      this.pageInfo.page = e - 1;\r\n      this.getTable({\r\n        pageInfo: this.pageInfo,\r\n        name: this.name\r\n      });\r\n    },\r\n    /*新建点击触发事件*/\r\n    openNewModal() {\r\n      this.newModal = true;\r\n      this.initUserNew();\r\n      this.data1.sort();\r\n      this.count = 0;\r\n      this.groupId = null;\r\n    },\r\n    /*新建modal的newOk点击事件*/\r\n    newOk(userNew) {\r\n      this.$refs[userNew].validate(valid => {\r\n        if (valid) {\r\n          if (this.userNew.password == this.userNew.passwordAgain) {\r\n            this.initUser();\r\n            this.userSet(this.userNew);\r\n            this.axios({\r\n              method: \"post\",\r\n              url: \"/users/user\",\r\n              data: this.user\r\n            })\r\n              .then(\r\n                function(response) {\r\n                  this.initUserNew();\r\n                  this.getTable({\r\n                    pageInfo: this.pageInfo,\r\n                    name: this.name\r\n                  });\r\n                  this.$Message.info(\"新建成功\");\r\n                }.bind(this)\r\n              )\r\n              .catch(function(error) {\r\n                alert(error);\r\n              });\r\n            this.newModal = false;\r\n          } else {\r\n            this.$Message.error(\"两次输入的密码不相同！\");\r\n            this.loading = false;\r\n            this.$nextTick(() => {\r\n              this.loading = true;\r\n            });\r\n          }\r\n        } else {\r\n          this.$Message.error(\"表单验证失败!\");\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.$nextTick(() => {\r\n              this.loading = true;\r\n            });\r\n          }, 1000);\r\n        }\r\n      });\r\n    },\r\n    /*点击修改时判断是否只选择一个*/\r\n    openModifyModal() {\r\n      if (this.count > 1 || this.count < 1) {\r\n        this.modifyModal = false;\r\n        this.$Message.warning(\"请至少选择一项(且只能选择一项)\");\r\n      } else {\r\n        this.modifyModal = true;\r\n      }\r\n    },\r\n    /*修改modal的modifyOk点击事件*/\r\n    modifyOk() {\r\n      // this.initUser();\r\n      // this.userSet(this.userModify);\r\n      this.axios({\r\n        method: \"put\",\r\n        url: \"/users/user\",\r\n        data: {\r\n          name: this.userModify.name,\r\n          usertype: this.userModify.usertype,\r\n          id: this.userModify.id\r\n        }\r\n      })\r\n        .then(\r\n          function(response) {\r\n            this.initUserNew();\r\n            this.getTable({\r\n              pageInfo: this.pageInfo,\r\n              name: this.name\r\n            });\r\n            this.$Message.info(\"修改成功\");\r\n          }.bind(this)\r\n        )\r\n        .catch(function(error) {\r\n          alert(error);\r\n        });\r\n      this.modifyModal = false;\r\n    },\r\n    /*modal的cancel点击事件*/\r\n    cancel() {\r\n      this.$Message.info(\"点击了取消\");\r\n    },\r\n    /*table选择后触发事件*/\r\n    change(e) {\r\n      if (e.length == 1) {\r\n        this.userModifySet(e[\"0\"]);\r\n      }\r\n      this.setGroupId(e);\r\n    },\r\n    /*通过选中的行设置groupId的值*/\r\n    setGroupId(e) {\r\n      this.groupId = [];\r\n      this.count = e.length;\r\n      for (var i = 0; i <= e.length - 1; i++) {\r\n        this.groupId.push(e[i].id);\r\n      }\r\n    },\r\n    /*删除table中选中的数据*/\r\n    del() {\r\n      if (this.groupId != null && this.groupId != \"\") {\r\n        this.axios({\r\n          method: \"delete\",\r\n          url: \"/users\",\r\n          data: this.groupId\r\n        })\r\n          .then(\r\n            function(response) {\r\n              this.getTable({\r\n                pageInfo: this.pageInfo,\r\n                name: this.name\r\n              });\r\n              this.groupId = null;\r\n              this.count = 0;\r\n              this.$Message.info(\"删除成功\");\r\n            }.bind(this)\r\n          )\r\n          .catch(function(error) {\r\n            alert(error);\r\n          });\r\n      }\r\n    },\r\n    /*表格中双击事件*/\r\n    dblclick(e) {\r\n      this.userModifySet(e);\r\n      this.modifyModal = true;\r\n      this.data1.sort();\r\n    },\r\n    /*流程配置*/\r\n    relationSet(e) {\r\n      this.roleModal = true;\r\n      this.data2 = [];\r\n      this.axios({\r\n        method: \"get\",\r\n        url: \"/relations/\" + e.id\r\n      })\r\n        .then(\r\n          function(response) {\r\n            var roleList = [];\r\n            for (var i in response.data.data) {\r\n              roleList.push(response.data.data[i].roleId);\r\n            }\r\n            for (var i in this.data2Temp) {\r\n              if (roleList.indexOf(this.data2Temp[i].id) == -1) {\r\n                this.data2.push({\r\n                  id: this.data2Temp[i].id,\r\n                  name: this.data2Temp[i].name,\r\n                  describe: this.data2Temp[i].describe,\r\n                  userId: e.id,\r\n                  _checked: false\r\n                });\r\n              } else {\r\n                this.data2.push({\r\n                  id: this.data2Temp[i].id,\r\n                  name: this.data2Temp[i].name,\r\n                  describe: this.data2Temp[i].describe,\r\n                  userId: e.id,\r\n                  _checked: true\r\n                });\r\n              }\r\n            }\r\n          }.bind(this)\r\n        )\r\n        .catch(function(error) {\r\n          alert(error);\r\n        });\r\n    },\r\n    /*配置角色modal确认按钮点击事件*/\r\n    roleOk() {\r\n      if (this.relationList != null) {\r\n        this.axios({\r\n          method: \"post\",\r\n          url: \"/relations\",\r\n          data: this.relationList\r\n        })\r\n          .then(\r\n            function(response) {\r\n              this.$Message.info(\"配置成功\");\r\n            }.bind(this)\r\n          )\r\n          .catch(function(error) {\r\n            alert(error);\r\n          });\r\n        this.relationList = null;\r\n      }\r\n    },\r\n    /*配置角色modal中表选择改变事件*/\r\n    change2(e) {\r\n      this.relationList = [];\r\n      if (e.length == 0) {\r\n        this.relationList.push({\r\n          userId: this.data2[0].userId\r\n        });\r\n      }\r\n      for (var i in e) {\r\n        this.relationList.push({\r\n          userId: e[i].userId,\r\n          roleId: e[i].id\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/views/sys"}]}